{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# **Causality Detection Based on Neural Network**"
      ],
      "metadata": {
        "id": "m4VxOwNLyv2B"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "S18UrsXxFdYI",
        "outputId": "b193c871-0d68-4e2e-f650-3f1b766a6d91"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[*********************100%%**********************]  1 of 1 completed\n",
            "[*********************100%%**********************]  1 of 1 completed\n",
            "[*********************100%%**********************]  1 of 1 completed\n",
            "[*********************100%%**********************]  1 of 1 completed\n",
            "[*********************100%%**********************]  1 of 1 completed\n",
            "[*********************100%%**********************]  1 of 1 completed\n",
            "[*********************100%%**********************]  1 of 1 completed\n",
            "[*********************100%%**********************]  1 of 1 completed\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "61/61 [==============================] - 3s 22ms/step - loss: 1.2269 - val_loss: 1.2447\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 1.1616 - val_loss: 1.2157\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 1s 8ms/step - loss: 1.1328 - val_loss: 1.2012\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 1s 13ms/step - loss: 1.1100 - val_loss: 1.1813\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0889 - val_loss: 1.1691\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0738 - val_loss: 1.1648\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0619 - val_loss: 1.1537\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0522 - val_loss: 1.1451\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0434 - val_loss: 1.1382\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0366 - val_loss: 1.1330\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0310 - val_loss: 1.1288\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0263 - val_loss: 1.1249\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0219 - val_loss: 1.1251\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0194 - val_loss: 1.1181\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0160 - val_loss: 1.1161\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0132 - val_loss: 1.1162\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0103 - val_loss: 1.1129\n",
            "Epoch 18/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0081 - val_loss: 1.1123\n",
            "Epoch 19/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0066 - val_loss: 1.1105\n",
            "Epoch 20/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0049 - val_loss: 1.1079\n",
            "Epoch 21/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0038 - val_loss: 1.1076\n",
            "Epoch 22/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0018 - val_loss: 1.1061\n",
            "Epoch 23/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0021 - val_loss: 1.1060\n",
            "Epoch 24/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0003 - val_loss: 1.1038\n",
            "Epoch 25/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0003 - val_loss: 1.1038\n",
            "Epoch 26/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9992 - val_loss: 1.1028\n",
            "Epoch 27/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9990 - val_loss: 1.1024\n",
            "Epoch 28/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9983 - val_loss: 1.1027\n",
            "Epoch 29/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9973 - val_loss: 1.1014\n",
            "Epoch 30/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9974 - val_loss: 1.1009\n",
            "Epoch 31/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9972 - val_loss: 1.1014\n",
            "Epoch 32/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9971 - val_loss: 1.1011\n",
            "Epoch 33/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9968 - val_loss: 1.1014\n",
            "Epoch 34/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9966 - val_loss: 1.1012\n",
            "Epoch 35/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 0.9960 - val_loss: 1.0998\n",
            "Epoch 36/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9958 - val_loss: 1.1000\n",
            "Epoch 37/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 0.9964 - val_loss: 1.1007\n",
            "Epoch 38/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9958 - val_loss: 1.0992\n",
            "Epoch 39/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9958 - val_loss: 1.0998\n",
            "Epoch 40/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9958 - val_loss: 1.1003\n",
            "Epoch 41/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9955 - val_loss: 1.0995\n",
            "Epoch 42/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 0.9952 - val_loss: 1.0994\n",
            "Epoch 43/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9953 - val_loss: 1.1000\n",
            "Epoch 44/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9956 - val_loss: 1.0997\n",
            "Epoch 45/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9954 - val_loss: 1.0998\n",
            "Epoch 46/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9953 - val_loss: 1.0997\n",
            "Epoch 47/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9950 - val_loss: 1.0993\n",
            "Epoch 48/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9949 - val_loss: 1.0992\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.9782\n",
            "Test Loss for Sensex: 0.9781885743141174\n",
            "Epoch 1/100\n",
            "61/61 [==============================] - 1s 7ms/step - loss: 1.2238 - val_loss: 1.2423\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1590 - val_loss: 1.2176\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1255 - val_loss: 1.1972\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1028 - val_loss: 1.1842\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0835 - val_loss: 1.1713\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0682 - val_loss: 1.1633\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0547 - val_loss: 1.1483\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0498 - val_loss: 1.1423\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0408 - val_loss: 1.1363\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0336 - val_loss: 1.1324\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0275 - val_loss: 1.1281\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0237 - val_loss: 1.1243\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0207 - val_loss: 1.1197\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0162 - val_loss: 1.1178\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0139 - val_loss: 1.1163\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0108 - val_loss: 1.1123\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0090 - val_loss: 1.1105\n",
            "Epoch 18/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0067 - val_loss: 1.1094\n",
            "Epoch 19/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0058 - val_loss: 1.1079\n",
            "Epoch 20/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0039 - val_loss: 1.1059\n",
            "Epoch 21/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0024 - val_loss: 1.1065\n",
            "Epoch 22/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0015 - val_loss: 1.1056\n",
            "Epoch 23/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0004 - val_loss: 1.1044\n",
            "Epoch 24/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9995 - val_loss: 1.1034\n",
            "Epoch 25/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9994 - val_loss: 1.1030\n",
            "Epoch 26/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9987 - val_loss: 1.1028\n",
            "Epoch 27/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 0.9979 - val_loss: 1.1018\n",
            "Epoch 28/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9979 - val_loss: 1.1018\n",
            "Epoch 29/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9970 - val_loss: 1.1011\n",
            "Epoch 30/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9968 - val_loss: 1.1012\n",
            "Epoch 31/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9969 - val_loss: 1.1009\n",
            "Epoch 32/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9964 - val_loss: 1.1013\n",
            "Epoch 33/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9965 - val_loss: 1.1004\n",
            "Epoch 34/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 0.9960 - val_loss: 1.0995\n",
            "Epoch 35/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9963 - val_loss: 1.1002\n",
            "Epoch 36/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9962 - val_loss: 1.0996\n",
            "Epoch 37/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9957 - val_loss: 1.1001\n",
            "Epoch 38/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9961 - val_loss: 1.0998\n",
            "Epoch 39/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9955 - val_loss: 1.0999\n",
            "Epoch 40/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9955 - val_loss: 1.0996\n",
            "Epoch 41/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9950 - val_loss: 1.0999\n",
            "Epoch 42/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9958 - val_loss: 1.1000\n",
            "Epoch 43/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9954 - val_loss: 1.0994\n",
            "Epoch 44/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9956 - val_loss: 1.1000\n",
            "Epoch 45/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.0989\n",
            "Epoch 46/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9956 - val_loss: 1.0992\n",
            "Epoch 47/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9954 - val_loss: 1.0998\n",
            "Epoch 48/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9954 - val_loss: 1.0997\n",
            "Epoch 49/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9951 - val_loss: 1.0999\n",
            "Epoch 50/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.0996\n",
            "Epoch 51/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9954 - val_loss: 1.1002\n",
            "Epoch 52/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.0997\n",
            "Epoch 53/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9956 - val_loss: 1.0993\n",
            "Epoch 54/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9950 - val_loss: 1.0986\n",
            "Epoch 55/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9951 - val_loss: 1.0990\n",
            "Epoch 56/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9953 - val_loss: 1.0993\n",
            "Epoch 57/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9953 - val_loss: 1.0995\n",
            "Epoch 58/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9953 - val_loss: 1.0992\n",
            "Epoch 59/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9950 - val_loss: 1.0991\n",
            "Epoch 60/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9953 - val_loss: 1.0996\n",
            "Epoch 61/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9950 - val_loss: 1.0991\n",
            "Epoch 62/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9956 - val_loss: 1.1005\n",
            "Epoch 63/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9953 - val_loss: 1.0989\n",
            "Epoch 64/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9951 - val_loss: 1.0992\n",
            "20/20 [==============================] - 0s 2ms/step - loss: 0.9776\n",
            "Test Loss for Nifty: 0.9775711297988892\n",
            "Epoch 1/100\n",
            "61/61 [==============================] - 1s 7ms/step - loss: 1.2114 - val_loss: 1.2265\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1432 - val_loss: 1.2036\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1121 - val_loss: 1.1845\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0887 - val_loss: 1.1683\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 1.0707 - val_loss: 1.1575\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0591 - val_loss: 1.1469\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 1.0473 - val_loss: 1.1405\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0379 - val_loss: 1.1345\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 1.0321 - val_loss: 1.1274\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 1.0265 - val_loss: 1.1255\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0222 - val_loss: 1.1268\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 1.0172 - val_loss: 1.1176\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0144 - val_loss: 1.1156\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0114 - val_loss: 1.1138\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 1.0092 - val_loss: 1.1115\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 1.0075 - val_loss: 1.1095\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0057 - val_loss: 1.1085\n",
            "Epoch 18/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0043 - val_loss: 1.1077\n",
            "Epoch 19/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0029 - val_loss: 1.1055\n",
            "Epoch 20/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0021 - val_loss: 1.1042\n",
            "Epoch 21/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0005 - val_loss: 1.1052\n",
            "Epoch 22/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0000 - val_loss: 1.1032\n",
            "Epoch 23/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0000 - val_loss: 1.1031\n",
            "Epoch 24/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9993 - val_loss: 1.1028\n",
            "Epoch 25/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9978 - val_loss: 1.1012\n",
            "Epoch 26/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9981 - val_loss: 1.1024\n",
            "Epoch 27/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9974 - val_loss: 1.1012\n",
            "Epoch 28/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9973 - val_loss: 1.1014\n",
            "Epoch 29/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9971 - val_loss: 1.1010\n",
            "Epoch 30/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9967 - val_loss: 1.1005\n",
            "Epoch 31/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9965 - val_loss: 1.1003\n",
            "Epoch 32/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9961 - val_loss: 1.1002\n",
            "Epoch 33/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9960 - val_loss: 1.1000\n",
            "Epoch 34/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9961 - val_loss: 1.0991\n",
            "Epoch 35/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9958 - val_loss: 1.1006\n",
            "Epoch 36/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9959 - val_loss: 1.0994\n",
            "Epoch 37/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9958 - val_loss: 1.0994\n",
            "Epoch 38/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9957 - val_loss: 1.0996\n",
            "Epoch 39/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9957 - val_loss: 1.0999\n",
            "Epoch 40/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9955 - val_loss: 1.0995\n",
            "Epoch 41/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9954 - val_loss: 1.0998\n",
            "Epoch 42/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9956 - val_loss: 1.1002\n",
            "Epoch 43/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9952 - val_loss: 1.0996\n",
            "Epoch 44/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9954 - val_loss: 1.0996\n",
            "20/20 [==============================] - 0s 2ms/step - loss: 0.9784\n",
            "Test Loss for Sectoral Index: 0.9784274101257324\n",
            "Epoch 1/100\n",
            "61/61 [==============================] - 1s 6ms/step - loss: 1.2143 - val_loss: 1.2444\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1524 - val_loss: 1.2058\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.1178 - val_loss: 1.1929\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0916 - val_loss: 1.1796\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0722 - val_loss: 1.1572\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0572 - val_loss: 1.1525\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0478 - val_loss: 1.1412\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0390 - val_loss: 1.1340\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0320 - val_loss: 1.1290\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0262 - val_loss: 1.1293\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0231 - val_loss: 1.1205\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0178 - val_loss: 1.1196\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0136 - val_loss: 1.1151\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0115 - val_loss: 1.1148\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0089 - val_loss: 1.1125\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0066 - val_loss: 1.1103\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0052 - val_loss: 1.1084\n",
            "Epoch 18/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0035 - val_loss: 1.1077\n",
            "Epoch 19/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0031 - val_loss: 1.1066\n",
            "Epoch 20/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0015 - val_loss: 1.1051\n",
            "Epoch 21/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0009 - val_loss: 1.1046\n",
            "Epoch 22/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0000 - val_loss: 1.1053\n",
            "Epoch 23/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9991 - val_loss: 1.1031\n",
            "Epoch 24/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9989 - val_loss: 1.1026\n",
            "Epoch 25/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9987 - val_loss: 1.1025\n",
            "Epoch 26/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9981 - val_loss: 1.1022\n",
            "Epoch 27/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 0.9976 - val_loss: 1.1019\n",
            "Epoch 28/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9967 - val_loss: 1.1010\n",
            "Epoch 29/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9973 - val_loss: 1.1012\n",
            "Epoch 30/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9967 - val_loss: 1.1013\n",
            "Epoch 31/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9965 - val_loss: 1.1005\n",
            "Epoch 32/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9962 - val_loss: 1.1004\n",
            "Epoch 33/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9961 - val_loss: 1.0999\n",
            "Epoch 34/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9962 - val_loss: 1.1003\n",
            "Epoch 35/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9956 - val_loss: 1.0998\n",
            "Epoch 36/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9959 - val_loss: 1.0999\n",
            "Epoch 37/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 0.9956 - val_loss: 1.0997\n",
            "Epoch 38/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9954 - val_loss: 1.0997\n",
            "Epoch 39/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9954 - val_loss: 1.1003\n",
            "Epoch 40/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9954 - val_loss: 1.1000\n",
            "Epoch 41/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9958 - val_loss: 1.0992\n",
            "Epoch 42/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9956 - val_loss: 1.1002\n",
            "Epoch 43/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9953 - val_loss: 1.0997\n",
            "Epoch 44/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9957 - val_loss: 1.1003\n",
            "Epoch 45/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9949 - val_loss: 1.0994\n",
            "Epoch 46/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9949 - val_loss: 1.0987\n",
            "Epoch 47/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.0994\n",
            "Epoch 48/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9955 - val_loss: 1.0999\n",
            "Epoch 49/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9950 - val_loss: 1.0995\n",
            "Epoch 50/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9950 - val_loss: 1.0992\n",
            "Epoch 51/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9954 - val_loss: 1.0992\n",
            "Epoch 52/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9953 - val_loss: 1.0996\n",
            "Epoch 53/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9952 - val_loss: 1.0993\n",
            "Epoch 54/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9953 - val_loss: 1.0996\n",
            "Epoch 55/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9953 - val_loss: 1.0999\n",
            "Epoch 56/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9952 - val_loss: 1.0995\n",
            "20/20 [==============================] - 0s 2ms/step - loss: 0.9777\n",
            "Test Loss for Gold: 0.9776861071586609\n",
            "Epoch 1/100\n",
            "61/61 [==============================] - 1s 7ms/step - loss: 1.2566 - val_loss: 1.2439\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1849 - val_loss: 1.2213\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1447 - val_loss: 1.2007\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1160 - val_loss: 1.1857\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0931 - val_loss: 1.1688\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0753 - val_loss: 1.1565\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0635 - val_loss: 1.1483\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0521 - val_loss: 1.1414\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0435 - val_loss: 1.1379\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0374 - val_loss: 1.1356\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0303 - val_loss: 1.1262\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0254 - val_loss: 1.1241\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0217 - val_loss: 1.1226\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0187 - val_loss: 1.1184\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 1.0148 - val_loss: 1.1196\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0131 - val_loss: 1.1139\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0105 - val_loss: 1.1126\n",
            "Epoch 18/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 1.0081 - val_loss: 1.1110\n",
            "Epoch 19/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0066 - val_loss: 1.1097\n",
            "Epoch 20/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0055 - val_loss: 1.1082\n",
            "Epoch 21/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0043 - val_loss: 1.1084\n",
            "Epoch 22/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0028 - val_loss: 1.1074\n",
            "Epoch 23/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0026 - val_loss: 1.1063\n",
            "Epoch 24/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0015 - val_loss: 1.1058\n",
            "Epoch 25/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 1.0011 - val_loss: 1.1041\n",
            "Epoch 26/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0004 - val_loss: 1.1037\n",
            "Epoch 27/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9992 - val_loss: 1.1033\n",
            "Epoch 28/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9990 - val_loss: 1.1029\n",
            "Epoch 29/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9985 - val_loss: 1.1018\n",
            "Epoch 30/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9983 - val_loss: 1.1016\n",
            "Epoch 31/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9976 - val_loss: 1.1016\n",
            "Epoch 32/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9978 - val_loss: 1.1022\n",
            "Epoch 33/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9975 - val_loss: 1.1007\n",
            "Epoch 34/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9971 - val_loss: 1.1012\n",
            "Epoch 35/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9966 - val_loss: 1.1008\n",
            "Epoch 36/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9965 - val_loss: 1.1009\n",
            "Epoch 37/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9963 - val_loss: 1.1002\n",
            "Epoch 38/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9963 - val_loss: 1.0997\n",
            "Epoch 39/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9963 - val_loss: 1.1001\n",
            "Epoch 40/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9961 - val_loss: 1.1008\n",
            "Epoch 41/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9963 - val_loss: 1.1002\n",
            "Epoch 42/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9960 - val_loss: 1.1005\n",
            "Epoch 43/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9961 - val_loss: 1.1004\n",
            "Epoch 44/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9959 - val_loss: 1.0994\n",
            "Epoch 45/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9956 - val_loss: 1.1002\n",
            "Epoch 46/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9956 - val_loss: 1.0999\n",
            "Epoch 47/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9956 - val_loss: 1.0998\n",
            "Epoch 48/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9955 - val_loss: 1.0997\n",
            "Epoch 49/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9955 - val_loss: 1.0989\n",
            "Epoch 50/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.0998\n",
            "Epoch 51/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9951 - val_loss: 1.0996\n",
            "Epoch 52/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9953 - val_loss: 1.0990\n",
            "Epoch 53/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9950 - val_loss: 1.0989\n",
            "Epoch 54/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9947 - val_loss: 1.0991\n",
            "Epoch 55/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9951 - val_loss: 1.0995\n",
            "Epoch 56/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9949 - val_loss: 1.0992\n",
            "Epoch 57/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9954 - val_loss: 1.0992\n",
            "Epoch 58/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.0996\n",
            "Epoch 59/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9950 - val_loss: 1.0992\n",
            "Epoch 60/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9953 - val_loss: 1.0991\n",
            "Epoch 61/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9952 - val_loss: 1.0991\n",
            "Epoch 62/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9950 - val_loss: 1.0992\n",
            "Epoch 63/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9947 - val_loss: 1.0984\n",
            "Epoch 64/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9950 - val_loss: 1.0989\n",
            "Epoch 65/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9949 - val_loss: 1.0996\n",
            "Epoch 66/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9952 - val_loss: 1.0986\n",
            "Epoch 67/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9955 - val_loss: 1.0991\n",
            "Epoch 68/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9952 - val_loss: 1.1000\n",
            "Epoch 69/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9954 - val_loss: 1.0997\n",
            "Epoch 70/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9951 - val_loss: 1.0989\n",
            "Epoch 71/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 0.9950 - val_loss: 1.0992\n",
            "Epoch 72/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9948 - val_loss: 1.0993\n",
            "Epoch 73/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9952 - val_loss: 1.0989\n",
            "20/20 [==============================] - 0s 2ms/step - loss: 0.9777\n",
            "Test Loss for USD/INR: 0.9776914715766907\n",
            "Epoch 1/100\n",
            "61/61 [==============================] - 1s 7ms/step - loss: 1.2038 - val_loss: 1.2352\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1419 - val_loss: 1.2047\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1064 - val_loss: 1.1842\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0826 - val_loss: 1.1639\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0638 - val_loss: 1.1526\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0507 - val_loss: 1.1448\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0410 - val_loss: 1.1359\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0338 - val_loss: 1.1331\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0284 - val_loss: 1.1259\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 1s 12ms/step - loss: 1.0227 - val_loss: 1.1232\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 1.0181 - val_loss: 1.1183\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0151 - val_loss: 1.1144\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0128 - val_loss: 1.1161\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0097 - val_loss: 1.1124\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0080 - val_loss: 1.1092\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0062 - val_loss: 1.1079\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0044 - val_loss: 1.1089\n",
            "Epoch 18/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0034 - val_loss: 1.1070\n",
            "Epoch 19/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0022 - val_loss: 1.1061\n",
            "Epoch 20/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0014 - val_loss: 1.1041\n",
            "Epoch 21/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0003 - val_loss: 1.1030\n",
            "Epoch 22/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9994 - val_loss: 1.1038\n",
            "Epoch 23/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9989 - val_loss: 1.1031\n",
            "Epoch 24/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9984 - val_loss: 1.1024\n",
            "Epoch 25/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9984 - val_loss: 1.1020\n",
            "Epoch 26/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9975 - val_loss: 1.1011\n",
            "Epoch 27/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9972 - val_loss: 1.1016\n",
            "Epoch 28/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9969 - val_loss: 1.1008\n",
            "Epoch 29/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9967 - val_loss: 1.1009\n",
            "Epoch 30/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9966 - val_loss: 1.1007\n",
            "Epoch 31/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 0.9962 - val_loss: 1.1008\n",
            "Epoch 32/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9961 - val_loss: 1.1001\n",
            "Epoch 33/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9963 - val_loss: 1.1001\n",
            "Epoch 34/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9957 - val_loss: 1.0996\n",
            "Epoch 35/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9960 - val_loss: 1.1002\n",
            "Epoch 36/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9959 - val_loss: 1.0995\n",
            "Epoch 37/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9958 - val_loss: 1.1003\n",
            "Epoch 38/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9957 - val_loss: 1.1001\n",
            "Epoch 39/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9956 - val_loss: 1.0988\n",
            "Epoch 40/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9954 - val_loss: 1.0994\n",
            "Epoch 41/100\n",
            "61/61 [==============================] - 1s 8ms/step - loss: 0.9955 - val_loss: 1.0999\n",
            "Epoch 42/100\n",
            "61/61 [==============================] - 1s 8ms/step - loss: 0.9953 - val_loss: 1.0992\n",
            "Epoch 43/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9949 - val_loss: 1.0995\n",
            "Epoch 44/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9953 - val_loss: 1.0995\n",
            "Epoch 45/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9954 - val_loss: 1.0993\n",
            "Epoch 46/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9953 - val_loss: 1.0991\n",
            "Epoch 47/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.1001\n",
            "Epoch 48/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9951 - val_loss: 1.0987\n",
            "Epoch 49/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.0988\n",
            "Epoch 50/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9954 - val_loss: 1.0997\n",
            "Epoch 51/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9953 - val_loss: 1.0996\n",
            "Epoch 52/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9952 - val_loss: 1.1000\n",
            "Epoch 53/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.0991\n",
            "Epoch 54/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.0989\n",
            "Epoch 55/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9956 - val_loss: 1.0998\n",
            "Epoch 56/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9948 - val_loss: 1.0993\n",
            "Epoch 57/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9951 - val_loss: 1.0997\n",
            "Epoch 58/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9951 - val_loss: 1.0985\n",
            "Epoch 59/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9952 - val_loss: 1.0988\n",
            "Epoch 60/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9952 - val_loss: 1.0997\n",
            "Epoch 61/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9953 - val_loss: 1.0985\n",
            "Epoch 62/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9951 - val_loss: 1.0995\n",
            "Epoch 63/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9952 - val_loss: 1.0987\n",
            "Epoch 64/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.0988\n",
            "Epoch 65/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9956 - val_loss: 1.0990\n",
            "Epoch 66/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9951 - val_loss: 1.0989\n",
            "Epoch 67/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9951 - val_loss: 1.0994\n",
            "Epoch 68/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9950 - val_loss: 1.0990\n",
            "Epoch 69/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9951 - val_loss: 1.0986\n",
            "Epoch 70/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9952 - val_loss: 1.0991\n",
            "Epoch 71/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9943 - val_loss: 1.0978\n",
            "Epoch 72/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9954 - val_loss: 1.0994\n",
            "Epoch 73/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9952 - val_loss: 1.0996\n",
            "Epoch 74/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.0993\n",
            "Epoch 75/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9953 - val_loss: 1.0992\n",
            "Epoch 76/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9950 - val_loss: 1.0997\n",
            "Epoch 77/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9949 - val_loss: 1.0996\n",
            "Epoch 78/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9951 - val_loss: 1.0994\n",
            "Epoch 79/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9947 - val_loss: 1.0987\n",
            "Epoch 80/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9950 - val_loss: 1.0990\n",
            "Epoch 81/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9952 - val_loss: 1.0993\n",
            "20/20 [==============================] - 0s 2ms/step - loss: 0.9783\n",
            "Test Loss for Oil: 0.9782593846321106\n",
            "Epoch 1/100\n",
            "61/61 [==============================] - 1s 7ms/step - loss: 1.2590 - val_loss: 1.2439\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1619 - val_loss: 1.2179\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1360 - val_loss: 1.1981\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.1111 - val_loss: 1.1838\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0912 - val_loss: 1.1727\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0783 - val_loss: 1.1621\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0655 - val_loss: 1.1553\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0554 - val_loss: 1.1474\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0474 - val_loss: 1.1417\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0400 - val_loss: 1.1389\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0348 - val_loss: 1.1328\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0294 - val_loss: 1.1286\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0248 - val_loss: 1.1252\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 1.0222 - val_loss: 1.1249\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0181 - val_loss: 1.1202\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0158 - val_loss: 1.1169\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0135 - val_loss: 1.1152\n",
            "Epoch 18/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0114 - val_loss: 1.1134\n",
            "Epoch 19/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0094 - val_loss: 1.1122\n",
            "Epoch 20/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0081 - val_loss: 1.1119\n",
            "Epoch 21/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0061 - val_loss: 1.1095\n",
            "Epoch 22/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0051 - val_loss: 1.1076\n",
            "Epoch 23/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0038 - val_loss: 1.1066\n",
            "Epoch 24/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0030 - val_loss: 1.1060\n",
            "Epoch 25/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0018 - val_loss: 1.1049\n",
            "Epoch 26/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0012 - val_loss: 1.1048\n",
            "Epoch 27/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 1.0001 - val_loss: 1.1039\n",
            "Epoch 28/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9996 - val_loss: 1.1034\n",
            "Epoch 29/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9992 - val_loss: 1.1035\n",
            "Epoch 30/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 0.9985 - val_loss: 1.1026\n",
            "Epoch 31/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9981 - val_loss: 1.1016\n",
            "Epoch 32/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9977 - val_loss: 1.1019\n",
            "Epoch 33/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9977 - val_loss: 1.1022\n",
            "Epoch 34/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9973 - val_loss: 1.1014\n",
            "Epoch 35/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9964 - val_loss: 1.1003\n",
            "Epoch 36/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9968 - val_loss: 1.1006\n",
            "Epoch 37/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9966 - val_loss: 1.1005\n",
            "Epoch 38/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9961 - val_loss: 1.1002\n",
            "Epoch 39/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9960 - val_loss: 1.1007\n",
            "Epoch 40/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9961 - val_loss: 1.1009\n",
            "Epoch 41/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9959 - val_loss: 1.1006\n",
            "Epoch 42/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9960 - val_loss: 1.1004\n",
            "Epoch 43/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9957 - val_loss: 1.1001\n",
            "Epoch 44/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9959 - val_loss: 1.1002\n",
            "Epoch 45/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9957 - val_loss: 1.1007\n",
            "Epoch 46/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9954 - val_loss: 1.0998\n",
            "Epoch 47/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9956 - val_loss: 1.0998\n",
            "Epoch 48/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9953 - val_loss: 1.0994\n",
            "Epoch 49/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9947 - val_loss: 1.0997\n",
            "Epoch 50/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9957 - val_loss: 1.0996\n",
            "Epoch 51/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9954 - val_loss: 1.1004\n",
            "Epoch 52/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9950 - val_loss: 1.0994\n",
            "Epoch 53/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9955 - val_loss: 1.0990\n",
            "Epoch 54/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9951 - val_loss: 1.0993\n",
            "Epoch 55/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9951 - val_loss: 1.0995\n",
            "Epoch 56/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9953 - val_loss: 1.1000\n",
            "Epoch 57/100\n",
            "61/61 [==============================] - 0s 4ms/step - loss: 0.9950 - val_loss: 1.0992\n",
            "Epoch 58/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.0996\n",
            "Epoch 59/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9954 - val_loss: 1.0996\n",
            "Epoch 60/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9952 - val_loss: 1.0990\n",
            "Epoch 61/100\n",
            "61/61 [==============================] - 0s 5ms/step - loss: 0.9953 - val_loss: 1.0997\n",
            "Epoch 62/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9954 - val_loss: 1.0997\n",
            "Epoch 63/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9952 - val_loss: 1.0989\n",
            "Epoch 64/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9953 - val_loss: 1.0993\n",
            "Epoch 65/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9949 - val_loss: 1.0992\n",
            "Epoch 66/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9953 - val_loss: 1.0996\n",
            "Epoch 67/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9950 - val_loss: 1.0997\n",
            "Epoch 68/100\n",
            "61/61 [==============================] - 0s 6ms/step - loss: 0.9952 - val_loss: 1.0997\n",
            "Epoch 69/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9948 - val_loss: 1.0984\n",
            "Epoch 70/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9954 - val_loss: 1.0995\n",
            "Epoch 71/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9951 - val_loss: 1.0987\n",
            "Epoch 72/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 0.9952 - val_loss: 1.0996\n",
            "Epoch 73/100\n",
            "61/61 [==============================] - 1s 8ms/step - loss: 0.9952 - val_loss: 1.0987\n",
            "Epoch 74/100\n",
            "61/61 [==============================] - 0s 8ms/step - loss: 0.9950 - val_loss: 1.0989\n",
            "Epoch 75/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9950 - val_loss: 1.0989\n",
            "Epoch 76/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9948 - val_loss: 1.0984\n",
            "Epoch 77/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9947 - val_loss: 1.0992\n",
            "Epoch 78/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9952 - val_loss: 1.0994\n",
            "Epoch 79/100\n",
            "61/61 [==============================] - 0s 7ms/step - loss: 0.9946 - val_loss: 1.0986\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.9776\n",
            "Test Loss for Interest Rate: 0.9776203632354736\n",
            "Influence of Input Variables on Target Variable:\n",
            "Sectoral Index    1.950623\n",
            "Sensex            1.900993\n",
            "Gold              1.378792\n",
            "Nifty             1.055819\n",
            "Oil               0.989478\n",
            "Interest Rate     0.979133\n",
            "USD/INR           0.919586\n",
            "dtype: float32\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split\n",
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Dense, Dropout\n",
        "from tensorflow.keras.regularizers import l2\n",
        "from tensorflow.keras.callbacks import EarlyStopping\n",
        "import yfinance as yf\n",
        "from tensorflow.keras.optimizers import Adam\n",
        "\n",
        "tickers = {\n",
        "    'Stock': 'RELIANCE.NS',\n",
        "    'Sensex': '^BSESN',\n",
        "    'Nifty': '^NSEI',\n",
        "    'Sectoral Index': '^CNXENERGY',\n",
        "    'Gold': 'GC=F',\n",
        "    'USD/INR': 'INR=X',\n",
        "    'Oil': 'CL=F',\n",
        "    'Interest Rate': '^IRX'\n",
        "}\n",
        "start_date = '2000-01-01'\n",
        "end_date = '2023-01-01'\n",
        "data = {}\n",
        "for var, ticker in tickers.items():\n",
        "    data[var] = yf.download(ticker, start=start_date, end=end_date)['Adj Close']\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "df.fillna(method='ffill', inplace=True)\n",
        "df.dropna(inplace=True)\n",
        "\n",
        "# Normalize the data\n",
        "scaler = StandardScaler()\n",
        "df_normalized = pd.DataFrame(scaler.fit_transform(df), columns=df.columns, index=df.index)\n",
        "\n",
        "# Define the target variable\n",
        "target_variable = 'Stock'\n",
        "n_time_steps = 60\n",
        "n_features = len(df.columns)\n",
        "\n",
        "# Function to create lagged data for time series\n",
        "def create_lagged_data(df, n_time_steps):\n",
        "    X, y = [], []\n",
        "    for i in range(n_time_steps, len(df)):\n",
        "        X.append(df[i-n_time_steps:i].values)\n",
        "        y.append(df[target_variable][i])\n",
        "    return np.array(X), np.array(y)\n",
        "\n",
        "# Train separate MLP models for each time series\n",
        "influence_summary = {}\n",
        "for col in df.columns:\n",
        "    if col == target_variable:\n",
        "        continue\n",
        "\n",
        "    # Prepare data for MLP\n",
        "    X, y = create_lagged_data(df_normalized, n_time_steps)\n",
        "\n",
        "    # Split data\n",
        "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "    # Define the MLP Model\n",
        "    model = Sequential()\n",
        "    model.add(Dense(50, activation='relu', kernel_regularizer=l2(0.01), input_shape=(n_time_steps, n_features)))\n",
        "    model.add(Dropout(0.2))\n",
        "    model.add(Dense(1, kernel_regularizer=l2(0.01)))\n",
        "    model.compile(optimizer=Adam(), loss='mse')\n",
        "    early_stopping = EarlyStopping(monitor='val_loss', patience=10, restore_best_weights=True)\n",
        "\n",
        "    # Train the MLP Model\n",
        "    history = model.fit(X_train, y_train, epochs=100, batch_size=32, validation_split=0.2, callbacks=[early_stopping])\n",
        "    loss = model.evaluate(X_test, y_test)\n",
        "    print(f'Test Loss for {col}: {loss}')\n",
        "\n",
        "    # Analyze the MLP Weights for Granger Causality\n",
        "    mlp_weights = model.layers[0].get_weights()\n",
        "    input_weights = mlp_weights[0]  # Input weights have shape (input_dim, units)\n",
        "    influence_summary[col] = np.sum(np.abs(input_weights), axis=1)\n",
        "\n",
        "# Visualize Granger Causality Relationships\n",
        "influence_df = pd.DataFrame.from_dict(influence_summary, orient='index', columns=df.columns)\n",
        "influence_df.drop(columns=[target_variable], inplace=True)\n",
        "influence_df = influence_df.sum(axis=1).sort_values(ascending=False)\n",
        "print(\"Influence of Input Variables on Target Variable:\")\n",
        "print(influence_df)\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.bar(influence_df.index, influence_df.values)\n",
        "plt.title('Influence of Input Variables on Target Variable')\n",
        "plt.xlabel('Variables')\n",
        "plt.ylabel('Influence')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "TsycBzqjk4HY",
        "outputId": "47c78471-4285-4c5c-f7d1-e817feda6793"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "61/61 [==============================] - 2s 21ms/step - loss: 0.2222 - val_loss: 0.0489\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0649 - val_loss: 0.0390\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0578 - val_loss: 0.0344\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0514 - val_loss: 0.0322\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0475 - val_loss: 0.0332\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 2s 27ms/step - loss: 0.0462 - val_loss: 0.0266\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 2s 27ms/step - loss: 0.0430 - val_loss: 0.0274\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.0394 - val_loss: 0.0266\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0378 - val_loss: 0.0315\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0371 - val_loss: 0.0274\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0356 - val_loss: 0.0213\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0367 - val_loss: 0.0201\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0314 - val_loss: 0.0183\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0314 - val_loss: 0.0223\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0328 - val_loss: 0.0169\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0319 - val_loss: 0.0176\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 1s 22ms/step - loss: 0.0305 - val_loss: 0.0160\n",
            "Epoch 18/100\n",
            "61/61 [==============================] - 2s 28ms/step - loss: 0.0301 - val_loss: 0.0171\n",
            "Epoch 19/100\n",
            "61/61 [==============================] - 2s 33ms/step - loss: 0.0292 - val_loss: 0.0180\n",
            "Epoch 20/100\n",
            "61/61 [==============================] - 1s 23ms/step - loss: 0.0273 - val_loss: 0.0153\n",
            "Epoch 21/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0281 - val_loss: 0.0161\n",
            "Epoch 22/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0269 - val_loss: 0.0216\n",
            "Epoch 23/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0264 - val_loss: 0.0132\n",
            "Epoch 24/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0303 - val_loss: 0.0140\n",
            "Epoch 25/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0270 - val_loss: 0.0125\n",
            "Epoch 26/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0252 - val_loss: 0.0166\n",
            "Epoch 27/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0267 - val_loss: 0.0145\n",
            "Epoch 28/100\n",
            "61/61 [==============================] - 1s 24ms/step - loss: 0.0247 - val_loss: 0.0165\n",
            "Epoch 29/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.0261 - val_loss: 0.0137\n",
            "Epoch 30/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.0238 - val_loss: 0.0174\n",
            "Epoch 31/100\n",
            "61/61 [==============================] - 2s 27ms/step - loss: 0.0254 - val_loss: 0.0172\n",
            "Epoch 32/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0244 - val_loss: 0.0111\n",
            "Epoch 33/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0254 - val_loss: 0.0135\n",
            "Epoch 34/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0249 - val_loss: 0.0196\n",
            "Epoch 35/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0254 - val_loss: 0.0172\n",
            "Epoch 36/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0255 - val_loss: 0.0325\n",
            "Epoch 37/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0273 - val_loss: 0.0112\n",
            "Epoch 38/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0265 - val_loss: 0.0137\n",
            "Epoch 39/100\n",
            "61/61 [==============================] - 2s 26ms/step - loss: 0.0252 - val_loss: 0.0106\n",
            "Epoch 40/100\n",
            "61/61 [==============================] - 2s 33ms/step - loss: 0.0261 - val_loss: 0.0122\n",
            "Epoch 41/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.0211 - val_loss: 0.0109\n",
            "Epoch 42/100\n",
            "61/61 [==============================] - 1s 23ms/step - loss: 0.0244 - val_loss: 0.0108\n",
            "Epoch 43/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0231 - val_loss: 0.0128\n",
            "Epoch 44/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0213 - val_loss: 0.0151\n",
            "Epoch 45/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0232 - val_loss: 0.0118\n",
            "Epoch 46/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0254 - val_loss: 0.0120\n",
            "Epoch 47/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0238 - val_loss: 0.0094\n",
            "Epoch 48/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0237 - val_loss: 0.0107\n",
            "Epoch 49/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0223 - val_loss: 0.0096\n",
            "Epoch 50/100\n",
            "61/61 [==============================] - 2s 26ms/step - loss: 0.0240 - val_loss: 0.0129\n",
            "Epoch 51/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.0242 - val_loss: 0.0133\n",
            "Epoch 52/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.0226 - val_loss: 0.0107\n",
            "Epoch 53/100\n",
            "61/61 [==============================] - 1s 23ms/step - loss: 0.0212 - val_loss: 0.0104\n",
            "Epoch 54/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0227 - val_loss: 0.0111\n",
            "Epoch 55/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0232 - val_loss: 0.0113\n",
            "Epoch 56/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0245 - val_loss: 0.0092\n",
            "Epoch 57/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0213 - val_loss: 0.0136\n",
            "Epoch 58/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0215 - val_loss: 0.0087\n",
            "Epoch 59/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0232 - val_loss: 0.0102\n",
            "Epoch 60/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0224 - val_loss: 0.0202\n",
            "Epoch 61/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0223 - val_loss: 0.0100\n",
            "Epoch 62/100\n",
            "61/61 [==============================] - 2s 28ms/step - loss: 0.0227 - val_loss: 0.0081\n",
            "Epoch 63/100\n",
            "61/61 [==============================] - 2s 29ms/step - loss: 0.0227 - val_loss: 0.0106\n",
            "Epoch 64/100\n",
            "61/61 [==============================] - 2s 29ms/step - loss: 0.0215 - val_loss: 0.0084\n",
            "Epoch 65/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0216 - val_loss: 0.0106\n",
            "Epoch 66/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0224 - val_loss: 0.0104\n",
            "Epoch 67/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0211 - val_loss: 0.0114\n",
            "Epoch 68/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0214 - val_loss: 0.0119\n",
            "Epoch 69/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0219 - val_loss: 0.0080\n",
            "Epoch 70/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0196 - val_loss: 0.0077\n",
            "Epoch 71/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0198 - val_loss: 0.0098\n",
            "Epoch 72/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0205 - val_loss: 0.0131\n",
            "Epoch 73/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0216 - val_loss: 0.0096\n",
            "Epoch 74/100\n",
            "61/61 [==============================] - 2s 28ms/step - loss: 0.0213 - val_loss: 0.0107\n",
            "Epoch 75/100\n",
            "61/61 [==============================] - 2s 28ms/step - loss: 0.0207 - val_loss: 0.0092\n",
            "Epoch 76/100\n",
            "61/61 [==============================] - 2s 28ms/step - loss: 0.0208 - val_loss: 0.0090\n",
            "Epoch 77/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0209 - val_loss: 0.0086\n",
            "Epoch 78/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0220 - val_loss: 0.0081\n",
            "Epoch 79/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0210 - val_loss: 0.0077\n",
            "Epoch 80/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0218 - val_loss: 0.0101\n",
            "Epoch 81/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0201 - val_loss: 0.0141\n",
            "Epoch 82/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0209 - val_loss: 0.0098\n",
            "Epoch 83/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0203 - val_loss: 0.0144\n",
            "Epoch 84/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0212 - val_loss: 0.0078\n",
            "Epoch 85/100\n",
            "61/61 [==============================] - 2s 26ms/step - loss: 0.0202 - val_loss: 0.0137\n",
            "Epoch 86/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.0200 - val_loss: 0.0074\n",
            "Epoch 87/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.0204 - val_loss: 0.0111\n",
            "Epoch 88/100\n",
            "61/61 [==============================] - 2s 25ms/step - loss: 0.0218 - val_loss: 0.0141\n",
            "Epoch 89/100\n",
            "61/61 [==============================] - 2s 29ms/step - loss: 0.0217 - val_loss: 0.0094\n",
            "Epoch 90/100\n",
            "61/61 [==============================] - 2s 33ms/step - loss: 0.0216 - val_loss: 0.0079\n",
            "Epoch 91/100\n",
            "61/61 [==============================] - 1s 22ms/step - loss: 0.0216 - val_loss: 0.0100\n",
            "Epoch 92/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0219 - val_loss: 0.0110\n",
            "Epoch 93/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0205 - val_loss: 0.0084\n",
            "Epoch 94/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0192 - val_loss: 0.0072\n",
            "Epoch 95/100\n",
            "61/61 [==============================] - 2s 27ms/step - loss: 0.0200 - val_loss: 0.0129\n",
            "Epoch 96/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.0224 - val_loss: 0.0110\n",
            "Epoch 97/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.0217 - val_loss: 0.0097\n",
            "Epoch 98/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.0208 - val_loss: 0.0070\n",
            "Epoch 99/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0187 - val_loss: 0.0076\n",
            "Epoch 100/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0214 - val_loss: 0.0071\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0071\n",
            "Test Loss for Feature 0: 0.007070440798997879\n",
            "Epoch 1/100\n",
            "61/61 [==============================] - 2s 22ms/step - loss: 0.3210 - val_loss: 0.1305\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1373 - val_loss: 0.1011\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1183 - val_loss: 0.0875\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1074 - val_loss: 0.0846\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 2s 25ms/step - loss: 0.1021 - val_loss: 0.0789\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.1027 - val_loss: 0.0771\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 2s 29ms/step - loss: 0.0958 - val_loss: 0.0841\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 1s 23ms/step - loss: 0.0955 - val_loss: 0.0782\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0958 - val_loss: 0.0755\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0947 - val_loss: 0.0701\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0891 - val_loss: 0.0678\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0887 - val_loss: 0.0668\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0890 - val_loss: 0.0677\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0853 - val_loss: 0.0648\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0850 - val_loss: 0.0789\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0846 - val_loss: 0.0690\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 2s 28ms/step - loss: 0.0869 - val_loss: 0.0619\n",
            "Epoch 18/100\n",
            "61/61 [==============================] - 2s 29ms/step - loss: 0.0851 - val_loss: 0.0716\n",
            "Epoch 19/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.0815 - val_loss: 0.0642\n",
            "Epoch 20/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.0843 - val_loss: 0.0642\n",
            "Epoch 21/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0839 - val_loss: 0.0620\n",
            "Epoch 22/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0809 - val_loss: 0.0655\n",
            "Epoch 23/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0860 - val_loss: 0.0751\n",
            "Epoch 24/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0844 - val_loss: 0.0616\n",
            "Epoch 25/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0790 - val_loss: 0.0582\n",
            "Epoch 26/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0768 - val_loss: 0.0586\n",
            "Epoch 27/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0702 - val_loss: 0.0668\n",
            "Epoch 28/100\n",
            "61/61 [==============================] - 1s 22ms/step - loss: 0.0704 - val_loss: 0.0519\n",
            "Epoch 29/100\n",
            "61/61 [==============================] - 2s 33ms/step - loss: 0.0707 - val_loss: 0.0740\n",
            "Epoch 30/100\n",
            "61/61 [==============================] - 2s 34ms/step - loss: 0.0697 - val_loss: 0.0556\n",
            "Epoch 31/100\n",
            "61/61 [==============================] - 1s 23ms/step - loss: 0.0674 - val_loss: 0.0603\n",
            "Epoch 32/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0689 - val_loss: 0.0496\n",
            "Epoch 33/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0637 - val_loss: 0.0628\n",
            "Epoch 34/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0675 - val_loss: 0.0533\n",
            "Epoch 35/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0704 - val_loss: 0.0538\n",
            "Epoch 36/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0663 - val_loss: 0.0538\n",
            "Epoch 37/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0662 - val_loss: 0.0510\n",
            "Epoch 38/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0616 - val_loss: 0.0435\n",
            "Epoch 39/100\n",
            "61/61 [==============================] - 1s 22ms/step - loss: 0.0636 - val_loss: 0.0431\n",
            "Epoch 40/100\n",
            "61/61 [==============================] - 2s 33ms/step - loss: 0.0636 - val_loss: 0.0444\n",
            "Epoch 41/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.0654 - val_loss: 0.0526\n",
            "Epoch 42/100\n",
            "61/61 [==============================] - 1s 24ms/step - loss: 0.0628 - val_loss: 0.0516\n",
            "Epoch 43/100\n",
            "61/61 [==============================] - 1s 17ms/step - loss: 0.0618 - val_loss: 0.0496\n",
            "Epoch 44/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0553 - val_loss: 0.0383\n",
            "Epoch 45/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0732 - val_loss: 0.0576\n",
            "Epoch 46/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0683 - val_loss: 0.0491\n",
            "Epoch 47/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0615 - val_loss: 0.0505\n",
            "Epoch 48/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0644 - val_loss: 0.0513\n",
            "Epoch 49/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0630 - val_loss: 0.0619\n",
            "Epoch 50/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.0639 - val_loss: 0.0455\n",
            "Epoch 51/100\n",
            "61/61 [==============================] - 2s 26ms/step - loss: 0.0612 - val_loss: 0.0490\n",
            "Epoch 52/100\n",
            "61/61 [==============================] - 2s 29ms/step - loss: 0.0596 - val_loss: 0.0430\n",
            "Epoch 53/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.0546 - val_loss: 0.0394\n",
            "Epoch 54/100\n",
            "61/61 [==============================] - 1s 23ms/step - loss: 0.0576 - val_loss: 0.0414\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0396\n",
            "Test Loss for Feature 1: 0.03959386795759201\n",
            "Epoch 1/100\n",
            "61/61 [==============================] - 2s 23ms/step - loss: 0.8917 - val_loss: 0.3717\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3171 - val_loss: 0.2962\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.2636 - val_loss: 0.2413\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.2230 - val_loss: 0.1949\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1842 - val_loss: 0.1552\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 1s 18ms/step - loss: 0.1564 - val_loss: 0.1295\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 1s 23ms/step - loss: 0.1462 - val_loss: 0.1177\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.1393 - val_loss: 0.1109\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 2s 29ms/step - loss: 0.1360 - val_loss: 0.1048\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 2s 25ms/step - loss: 0.1303 - val_loss: 0.1035\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1296 - val_loss: 0.0989\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1316 - val_loss: 0.0982\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1276 - val_loss: 0.0948\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1268 - val_loss: 0.0939\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1230 - val_loss: 0.0937\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1212 - val_loss: 0.0936\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1175 - val_loss: 0.0943\n",
            "Epoch 18/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1222 - val_loss: 0.0934\n",
            "Epoch 19/100\n",
            "61/61 [==============================] - 2s 29ms/step - loss: 0.1193 - val_loss: 0.0865\n",
            "Epoch 20/100\n",
            "61/61 [==============================] - 2s 33ms/step - loss: 0.2238 - val_loss: 0.2601\n",
            "Epoch 21/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.2121 - val_loss: 0.1129\n",
            "Epoch 22/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1378 - val_loss: 0.1009\n",
            "Epoch 23/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1288 - val_loss: 0.0988\n",
            "Epoch 24/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1240 - val_loss: 0.0957\n",
            "Epoch 25/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1218 - val_loss: 0.0938\n",
            "Epoch 26/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1219 - val_loss: 0.0939\n",
            "Epoch 27/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1183 - val_loss: 0.0919\n",
            "Epoch 28/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1160 - val_loss: 0.0909\n",
            "Epoch 29/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1175 - val_loss: 0.0922\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0899\n",
            "Test Loss for Feature 2: 0.08994287252426147\n",
            "Epoch 1/100\n",
            "61/61 [==============================] - 4s 36ms/step - loss: 0.4267 - val_loss: 0.2235\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.1891 - val_loss: 0.1363\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 2s 25ms/step - loss: 0.1434 - val_loss: 0.1038\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1256 - val_loss: 0.0845\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1087 - val_loss: 0.0795\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1036 - val_loss: 0.0760\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1042 - val_loss: 0.0777\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0991 - val_loss: 0.0751\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0980 - val_loss: 0.0727\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0949 - val_loss: 0.0721\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 1s 24ms/step - loss: 0.0937 - val_loss: 0.0723\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.0926 - val_loss: 0.0708\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.0897 - val_loss: 0.0700\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.0913 - val_loss: 0.0714\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0910 - val_loss: 0.0681\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0877 - val_loss: 0.0672\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0880 - val_loss: 0.0667\n",
            "Epoch 18/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0887 - val_loss: 0.0705\n",
            "Epoch 19/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0849 - val_loss: 0.0631\n",
            "Epoch 20/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0870 - val_loss: 0.0630\n",
            "Epoch 21/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0873 - val_loss: 0.0669\n",
            "Epoch 22/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0855 - val_loss: 0.0613\n",
            "Epoch 23/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.0916 - val_loss: 0.0686\n",
            "Epoch 24/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.0883 - val_loss: 0.0689\n",
            "Epoch 25/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.0872 - val_loss: 0.0661\n",
            "Epoch 26/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.0867 - val_loss: 0.0952\n",
            "Epoch 27/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0879 - val_loss: 0.0663\n",
            "Epoch 28/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0848 - val_loss: 0.0649\n",
            "Epoch 29/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0883 - val_loss: 0.0764\n",
            "Epoch 30/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0910 - val_loss: 0.0674\n",
            "Epoch 31/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.0855 - val_loss: 0.0660\n",
            "Epoch 32/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.0897 - val_loss: 0.0668\n",
            "20/20 [==============================] - 0s 10ms/step - loss: 0.0659\n",
            "Test Loss for Feature 3: 0.06587476283311844\n",
            "Epoch 1/100\n",
            "61/61 [==============================] - 3s 35ms/step - loss: 0.7454 - val_loss: 0.6361\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.5922 - val_loss: 0.5423\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.5546 - val_loss: 0.4866\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.5066 - val_loss: 0.4650\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.4573 - val_loss: 0.4121\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.4449 - val_loss: 0.4135\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.4439 - val_loss: 0.3961\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.4268 - val_loss: 0.4667\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.4595 - val_loss: 0.4150\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.4223 - val_loss: 0.3963\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.4344 - val_loss: 0.3934\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.4145 - val_loss: 0.4050\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.4171 - val_loss: 0.4159\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.4133 - val_loss: 0.3951\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 1s 23ms/step - loss: 0.4000 - val_loss: 0.3835\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3941 - val_loss: 0.3833\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 39352.4844 - val_loss: 0.4784\n",
            "Epoch 18/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.4290 - val_loss: 0.3807\n",
            "Epoch 19/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.4173 - val_loss: 0.4051\n",
            "Epoch 20/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.4029 - val_loss: 0.3734\n",
            "Epoch 21/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3906 - val_loss: 0.3653\n",
            "Epoch 22/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3923 - val_loss: 0.3620\n",
            "Epoch 23/100\n",
            "61/61 [==============================] - 2s 28ms/step - loss: 0.3896 - val_loss: 0.3647\n",
            "Epoch 24/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.3894 - val_loss: 0.3718\n",
            "Epoch 25/100\n",
            "61/61 [==============================] - 2s 35ms/step - loss: 0.3851 - val_loss: 0.3667\n",
            "Epoch 26/100\n",
            "61/61 [==============================] - 1s 22ms/step - loss: 0.3781 - val_loss: 0.3650\n",
            "Epoch 27/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3735 - val_loss: 0.3692\n",
            "Epoch 28/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3856 - val_loss: 0.3572\n",
            "Epoch 29/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3774 - val_loss: 0.3630\n",
            "Epoch 30/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.3752 - val_loss: 0.3640\n",
            "Epoch 31/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3664 - val_loss: 0.3718\n",
            "Epoch 32/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3674 - val_loss: 0.3776\n",
            "Epoch 33/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.3639 - val_loss: 0.3519\n",
            "Epoch 34/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.3683 - val_loss: 0.3553\n",
            "Epoch 35/100\n",
            "61/61 [==============================] - 2s 33ms/step - loss: 0.3817 - val_loss: 0.3579\n",
            "Epoch 36/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.3671 - val_loss: 0.3731\n",
            "Epoch 37/100\n",
            "61/61 [==============================] - 1s 23ms/step - loss: 0.3683 - val_loss: 0.3702\n",
            "Epoch 38/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3640 - val_loss: 0.3541\n",
            "Epoch 39/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3594 - val_loss: 0.3848\n",
            "Epoch 40/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3813 - val_loss: 0.3797\n",
            "Epoch 41/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3644 - val_loss: 0.3439\n",
            "Epoch 42/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3555 - val_loss: 0.3409\n",
            "Epoch 43/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3530 - val_loss: 0.3441\n",
            "Epoch 44/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3776 - val_loss: 0.3542\n",
            "Epoch 45/100\n",
            "61/61 [==============================] - 2s 27ms/step - loss: 0.3550 - val_loss: 0.3420\n",
            "Epoch 46/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.3510 - val_loss: 0.3543\n",
            "Epoch 47/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.3518 - val_loss: 0.3548\n",
            "Epoch 48/100\n",
            "61/61 [==============================] - 1s 23ms/step - loss: 0.3508 - val_loss: 0.3361\n",
            "Epoch 49/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3450 - val_loss: 0.3444\n",
            "Epoch 50/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3475 - val_loss: 0.3498\n",
            "Epoch 51/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3467 - val_loss: 0.3720\n",
            "Epoch 52/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3508 - val_loss: 0.3387\n",
            "Epoch 53/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3400 - val_loss: 0.3312\n",
            "Epoch 54/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3325 - val_loss: 0.3206\n",
            "Epoch 55/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3280 - val_loss: 0.3370\n",
            "Epoch 56/100\n",
            "61/61 [==============================] - 2s 27ms/step - loss: 0.3420 - val_loss: 0.3338\n",
            "Epoch 57/100\n",
            "61/61 [==============================] - 2s 33ms/step - loss: 0.3490 - val_loss: 0.3338\n",
            "Epoch 58/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.3479 - val_loss: 0.3771\n",
            "Epoch 59/100\n",
            "61/61 [==============================] - 2s 25ms/step - loss: 0.3379 - val_loss: 0.3185\n",
            "Epoch 60/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3216 - val_loss: 0.3203\n",
            "Epoch 61/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.3345 - val_loss: 0.3348\n",
            "Epoch 62/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.3340 - val_loss: 0.3267\n",
            "Epoch 63/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3290 - val_loss: 0.3225\n",
            "Epoch 64/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.3190 - val_loss: 0.3012\n",
            "Epoch 65/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3093 - val_loss: 0.2990\n",
            "Epoch 66/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.3071 - val_loss: 0.2912\n",
            "Epoch 67/100\n",
            "61/61 [==============================] - 1s 24ms/step - loss: 0.3190 - val_loss: 0.3398\n",
            "Epoch 68/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.3916 - val_loss: 0.3447\n",
            "Epoch 69/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.3585 - val_loss: 0.3342\n",
            "Epoch 70/100\n",
            "61/61 [==============================] - 2s 25ms/step - loss: 0.3412 - val_loss: 0.3224\n",
            "Epoch 71/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.3293 - val_loss: 0.3241\n",
            "Epoch 72/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.3171 - val_loss: 0.3089\n",
            "Epoch 73/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.3247 - val_loss: 0.3866\n",
            "Epoch 74/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.3879 - val_loss: 0.3569\n",
            "Epoch 75/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.3649 - val_loss: 0.3315\n",
            "Epoch 76/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.3681 - val_loss: 0.3508\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.2926\n",
            "Test Loss for Feature 4: 0.2926279902458191\n",
            "Epoch 1/100\n",
            "61/61 [==============================] - 3s 25ms/step - loss: 0.5008 - val_loss: 0.2300\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.1813 - val_loss: 0.1712\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.1649 - val_loss: 0.1538\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 2s 25ms/step - loss: 0.1561 - val_loss: 0.1441\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.1590 - val_loss: 0.1370\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.1409 - val_loss: 0.1252\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.1365 - val_loss: 0.1358\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1380 - val_loss: 0.1260\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.1240 - val_loss: 0.1194\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1371 - val_loss: 0.1477\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.1319 - val_loss: 0.1140\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1227 - val_loss: 0.1022\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1235 - val_loss: 0.1001\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1247 - val_loss: 0.1311\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1193 - val_loss: 0.1053\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.1102 - val_loss: 0.1045\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.1095 - val_loss: 0.0952\n",
            "Epoch 18/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.1025 - val_loss: 0.0998\n",
            "Epoch 19/100\n",
            "61/61 [==============================] - 1s 23ms/step - loss: 0.1068 - val_loss: 0.0921\n",
            "Epoch 20/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1011 - val_loss: 0.0992\n",
            "Epoch 21/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.1161 - val_loss: 0.0852\n",
            "Epoch 22/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1051 - val_loss: 0.1361\n",
            "Epoch 23/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.1110 - val_loss: 0.1014\n",
            "Epoch 24/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1068 - val_loss: 0.0892\n",
            "Epoch 25/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1001 - val_loss: 0.0957\n",
            "Epoch 26/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1266 - val_loss: 0.1329\n",
            "Epoch 27/100\n",
            "61/61 [==============================] - 2s 28ms/step - loss: 0.1339 - val_loss: 0.1836\n",
            "Epoch 28/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.1438 - val_loss: 0.1232\n",
            "Epoch 29/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 0.1169 - val_loss: 0.0866\n",
            "Epoch 30/100\n",
            "61/61 [==============================] - 2s 28ms/step - loss: 0.1007 - val_loss: 0.1060\n",
            "Epoch 31/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.1105 - val_loss: 0.2007\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0747\n",
            "Test Loss for Feature 5: 0.07469774782657623\n",
            "Epoch 1/100\n",
            "61/61 [==============================] - 3s 24ms/step - loss: 1.0127 - val_loss: 1.1083\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.9464 - val_loss: 1.1060\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.9566 - val_loss: 1.0639\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.9032 - val_loss: 1.0918\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.9236 - val_loss: 1.0551\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 2s 27ms/step - loss: 0.8759 - val_loss: 0.9628\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 2s 29ms/step - loss: 0.7767 - val_loss: 0.8469\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 2s 33ms/step - loss: 1.0434 - val_loss: 1.0974\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 1s 23ms/step - loss: 0.9546 - val_loss: 1.0874\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.9442 - val_loss: 1.0794\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.9377 - val_loss: 1.0732\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.9325 - val_loss: 1.0675\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.9236 - val_loss: 1.0593\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 2s 27ms/step - loss: 0.9164 - val_loss: 1.0449\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 2s 30ms/step - loss: 0.9410 - val_loss: 1.1242\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 2s 37ms/step - loss: 0.9676 - val_loss: 1.1054\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 2s 36ms/step - loss: 0.9616 - val_loss: 1.0886\n",
            "20/20 [==============================] - 0s 10ms/step - loss: 0.7902\n",
            "Test Loss for Feature 6: 0.7901503443717957\n",
            "Epoch 1/100\n",
            "61/61 [==============================] - 4s 24ms/step - loss: 0.8857 - val_loss: 0.9393\n",
            "Epoch 2/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.8600 - val_loss: 0.9508\n",
            "Epoch 3/100\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 0.8623 - val_loss: 0.9263\n",
            "Epoch 4/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.8531 - val_loss: 0.9263\n",
            "Epoch 5/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.8494 - val_loss: 0.9242\n",
            "Epoch 6/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.8474 - val_loss: 0.9227\n",
            "Epoch 7/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.8446 - val_loss: 0.9184\n",
            "Epoch 8/100\n",
            "61/61 [==============================] - 1s 24ms/step - loss: 8712128.0000 - val_loss: 47.9200\n",
            "Epoch 9/100\n",
            "61/61 [==============================] - 2s 31ms/step - loss: 74.8807 - val_loss: 0.9514\n",
            "Epoch 10/100\n",
            "61/61 [==============================] - 2s 32ms/step - loss: 0.8540 - val_loss: 0.9305\n",
            "Epoch 11/100\n",
            "61/61 [==============================] - 2s 27ms/step - loss: 0.8518 - val_loss: 0.9252\n",
            "Epoch 12/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.8465 - val_loss: 0.9243\n",
            "Epoch 13/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.8490 - val_loss: 0.9232\n",
            "Epoch 14/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.8475 - val_loss: 0.9234\n",
            "Epoch 15/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.8473 - val_loss: 0.9232\n",
            "Epoch 16/100\n",
            "61/61 [==============================] - 1s 21ms/step - loss: 0.8469 - val_loss: 0.9227\n",
            "Epoch 17/100\n",
            "61/61 [==============================] - 1s 20ms/step - loss: 0.8476 - val_loss: 0.9225\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.8286\n",
            "Test Loss for Feature 7: 0.8285916447639465\n",
            "Influence of Input Variables on Target Variable (LSTM):\n",
            "                Influence\n",
            "Nifty           12.411825\n",
            "Gold            10.125650\n",
            "Oil              9.093632\n",
            "Sectoral Index   7.183485\n",
            "Interest Rate    6.608274\n",
            "USD/INR          6.436139\n",
            "Sensex           4.365016\n",
            "Stock            2.159332\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# ===========================  LSTM CODE ===================================\n",
        "n_time_steps = 60\n",
        "\n",
        "# Reshape data for componentwise LSTM\n",
        "X = []\n",
        "for i in range(n_time_steps, len(df_normalized)):\n",
        "    X.append(df_normalized[i-n_time_steps:i].values.T)  # Transpose for componentwise LSTM\n",
        "X = np.array(X)\n",
        "\n",
        "y = df_normalized[target_variable][n_time_steps:].values\n",
        "\n",
        "# Step 3: Define the LSTM Model\n",
        "lstm_models = []\n",
        "for i in range(n_features):  # Create separate LSTM models for each input feature\n",
        "    model = Sequential()\n",
        "    model.add(LSTM(50, activation='relu', kernel_regularizer=l2(0.01), input_shape=(n_time_steps, 1)))\n",
        "    model.add(Dropout(0.2))\n",
        "    model.add(Dense(1, kernel_regularizer=l2(0.01)))\n",
        "    model.compile(optimizer='adam', loss='mse')\n",
        "    early_stopping = EarlyStopping(monitor='val_loss', patience=10, restore_best_weights=True)\n",
        "    lstm_models.append(model)\n",
        "\n",
        "# Train the LSTM Model\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "lstm_histories = []\n",
        "for i in range(n_features):\n",
        "    history = lstm_models[i].fit(X_train[:, i, :], y_train, epochs=100, batch_size=32, validation_split=0.2, callbacks=[early_stopping])\n",
        "    lstm_histories.append(history)\n",
        "    loss = lstm_models[i].evaluate(X_test[:, i, :], y_test)\n",
        "    print(f'Test Loss for Feature {i}: {loss}')\n",
        "\n",
        "# Analyze the LSTM Weights for Granger Causality\n",
        "lstm_weights = []\n",
        "for i in range(n_features):\n",
        "    lstm_weights.append(lstm_models[i].layers[0].get_weights()[0])  # Input weights for each feature\n",
        "\n",
        "# Visualize Granger Causality Relationships\n",
        "influence_summary = np.sum(np.abs(np.array(lstm_weights)), axis=(1, 2))  # Summing weights across all features and timesteps\n",
        "influence_df = pd.DataFrame(influence_summary, index=df.columns, columns=['Influence'])\n",
        "influence_df.sort_values(by='Influence', ascending=False, inplace=True)\n",
        "print(\"Influence of Input Variables on Target Variable (LSTM):\")\n",
        "print(influence_df)\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.bar(influence_df.index, influence_df['Influence'])\n",
        "plt.title('Influence of Input Variables on Target Variable (LSTM)')\n",
        "plt.xlabel('Variables')\n",
        "plt.ylabel('Influence')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Non Linear Causality - Wavelet Decomposition**"
      ],
      "metadata": {
        "id": "xBa3YyZZzlrZ"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "FzeUMRzwDdsC",
        "outputId": "34b56dd8-90b1-4b17-c603-058cc1d08105"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (1.25.2)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.0.3)\n",
            "Requirement already satisfied: statsmodels in /usr/local/lib/python3.10/dist-packages (0.14.2)\n",
            "Requirement already satisfied: PyWavelets in /usr/local/lib/python3.10/dist-packages (1.6.0)\n",
            "Requirement already satisfied: yfinance in /usr/local/lib/python3.10/dist-packages (0.2.40)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2023.4)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n",
            "Requirement already satisfied: scipy!=1.9.2,>=1.8 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.11.4)\n",
            "Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (0.5.6)\n",
            "Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (24.0)\n",
            "Requirement already satisfied: requests>=2.31 in /usr/local/lib/python3.10/dist-packages (from yfinance) (2.31.0)\n",
            "Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.10/dist-packages (from yfinance) (0.0.11)\n",
            "Requirement already satisfied: lxml>=4.9.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.9.4)\n",
            "Requirement already satisfied: platformdirs>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.2.2)\n",
            "Requirement already satisfied: frozendict>=2.3.4 in /usr/local/lib/python3.10/dist-packages (from yfinance) (2.4.4)\n",
            "Requirement already satisfied: peewee>=3.16.2 in /usr/local/lib/python3.10/dist-packages (from yfinance) (3.17.5)\n",
            "Requirement already satisfied: beautifulsoup4>=4.11.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.12.3)\n",
            "Requirement already satisfied: html5lib>=1.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (1.1)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4>=4.11.1->yfinance) (2.5)\n",
            "Requirement already satisfied: six>=1.9 in /usr/local/lib/python3.10/dist-packages (from html5lib>=1.1->yfinance) (1.16.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from html5lib>=1.1->yfinance) (0.5.1)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (3.7)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (2024.2.2)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[*********************100%%**********************]  1 of 1 completed\n",
            "[*********************100%%**********************]  1 of 1 completed\n",
            "[*********************100%%**********************]  1 of 1 completed\n",
            "[*********************100%%**********************]  1 of 1 completed\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ADF Test for Stock1_D1:\n",
            "ADF Statistic: -12.4395\n",
            "p-value: 0.0000\n",
            "Number of Lags: 17\n",
            "Number of Observations Used: 301\n",
            "Critical Values:\n",
            "\t1%: -3.4523\n",
            "\t5%: -2.8712\n",
            "\t10%: -2.5719\n",
            "ADF Test for Stock2_D1:\n",
            "ADF Statistic: -12.1797\n",
            "p-value: 0.0000\n",
            "Number of Lags: 17\n",
            "Number of Observations Used: 301\n",
            "Critical Values:\n",
            "\t1%: -3.4523\n",
            "\t5%: -2.8712\n",
            "\t10%: -2.5719\n",
            "Granger Causality Test (Stock1_D1 -> Stock2_D1):\n",
            "Granger causality F-test. H_0: Stock2_D1 does not Granger-cause Stock1_D1. Conclusion: fail to reject H_0 at 5% significance level.\n",
            "==============================================\n",
            "Test statistic Critical value p-value    df   \n",
            "----------------------------------------------\n",
            "        0.5228          2.386   0.719 (4, 612)\n",
            "----------------------------------------------\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 12 Axes>"
            ],
            "image/png": "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qkJQWVkZPp+vVYEz2h+7d+9OYWEh+/fvb1EALS0tZdWqVWRkZNC9e3dycnJO2kVRf26qqqooLCxk+PDhLc6BVVVVatGthQsXcuutt55UVRnD4TDvvPMObreba6+9lvT09HY57s6dO1WvyJo1axg1alSz6w6FQrz22mu43W5uuOGGVhXPkpISjEZjq20rLS3lzTffJDMzk9tvv71Fg8T+/ft57733OO2007jkkkuO2H+9Xq8aWZCQkIDD4WDJkiVceOGFR7z2lggEAjz11FPHtO/xcPPNN5OQkIDX623muYoacEDxDlmtViwWC19//TWTJ09uNm6sWrWK7Oxsnn32WX7zm99gMpkwm83MmTOHRx55hGeeeYYLLriA+fPnc/PNN9OpUyfOPfdcwuEwF1xwAQ6Hg5deeom8vDwqKipafE7FxcWcd955jB49mrfeeqvFbcrKyvjss884++yzAWXMjSpWVqsVs9ncpncsIyOD6667jrfffptQKNTiuaJhgykpKUc83vFw8owIgpOGkpISnnnmGV5//fVmlRsPh8vlwuFwHHab4uJi1SLbnrhcrqNe+Hnbtm18/PHHMauZdwQ//vijuvJ3axW8tm3bRlFREatWreLrr79ut8pz5eXlvPrqq7z88sutVso8mfD7/Xz88cesXr2ahQsX8u677/LWW291SJ8BZRA/3L1evnw5u3btYv78+c3CEqBRmO3Xrx85OTmEw2G2bt3abLtVq1bx7LPP8uabb/LBBx/wwgsvsGzZshbDOtqKLMsUFhYyf/78mNDqXzLBYJClS5fy6quvsmzZMubOndvmdyUau38075bP5+Ott97iueeea7Van9vt5tNPP+Xbb79l0aJFLR5/3bp1NDQ0UFlZyYIFC47YhmhYS1TpSU5OJikpiXA4fNiqgdF8q2HDhpGQkEAgEODgwYPNtvvhhx/YunUrixcv5o033mDBggWHbU9reDyeox53o0aIo7H6V1ZW8tJLL/Hjjz8ebROPCr/fz/vvv8/ChQv56aefWtym6RqdpaWlas7lycLOnTspLi6mtraWt956q8Xn3xKyLKvFElqi6bhWX1/Pvn37mm1TUlKCzWYjEAjw4YcftpgjWFFRwVtvvcUbb7wR4/Vvyrp165BlmYqKilYLuaxatQpZltmwYUObKmMWFBQQCoVIS0vjiiuuAGDt2rWnZF5i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\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "!pip install numpy pandas statsmodels PyWavelets yfinance\n",
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import pywt\n",
        "import matplotlib.pyplot as plt\n",
        "from statsmodels.tsa.api import VAR\n",
        "from statsmodels.tsa.stattools import adfuller, grangercausalitytests\n",
        "import yfinance as yf\n",
        "\n",
        "start = '2010-01-01'\n",
        "end = '2020-01-01'\n",
        "stock1 = yf.download('AAPL', start=start, end=end)['Adj Close']\n",
        "stock2 = yf.download('MSFT', start=start, end=end)['Adj Close']\n",
        "stock3 = yf.download('GOOGL', start=start, end=end)['Adj Close']\n",
        "exchange_rate = yf.download('EURUSD=X', start=start, end=end)['Adj Close']\n",
        "\n",
        "data = pd.concat([stock1, stock2, stock3, exchange_rate], axis=1)\n",
        "data.columns = ['Stock1', 'Stock2', 'Stock3', 'ExchangeRate']\n",
        "data = data.dropna()\n",
        "\n",
        "# Transform into natural logarithms and first-difference\n",
        "data['LogStock1'] = np.log(data['Stock1']).diff().dropna()\n",
        "data['LogStock2'] = np.log(data['Stock2']).diff().dropna()\n",
        "data['LogStock3'] = np.log(data['Stock3']).diff().dropna()\n",
        "data['LogExchangeRate'] = np.log(data['ExchangeRate']).diff().dropna()\n",
        "\n",
        "# Multiresolution Wavelet Decomposition\n",
        "wavelet = 'sym4'\n",
        "level = 3\n",
        "coeffs_stock1 = pywt.wavedec(data['LogStock1'].dropna(), wavelet, level=level)\n",
        "coeffs_stock2 = pywt.wavedec(data['LogStock2'].dropna(), wavelet, level=level)\n",
        "coeffs_stock3 = pywt.wavedec(data['LogStock3'].dropna(), wavelet, level=level)\n",
        "coeffs_exchange_rate = pywt.wavedec(data['LogExchangeRate'].dropna(), wavelet, level=level)\n",
        "\n",
        "# Reconstruct detail coefficients (D1, D2, D3)\n",
        "def reconstruct_details(coeffs, wavelet, level):\n",
        "    details = []\n",
        "    for i in range(1, level + 1):\n",
        "        detail = pywt.upcoef('d', coeffs[i], wavelet, level=i, take=len(coeffs[0]))\n",
        "        details.append(detail)\n",
        "    return details\n",
        "\n",
        "stock1_details = reconstruct_details(coeffs_stock1, wavelet, level)\n",
        "stock2_details = reconstruct_details(coeffs_stock2, wavelet, level)\n",
        "stock3_details = reconstruct_details(coeffs_stock3, wavelet, level)\n",
        "exchange_rate_details = reconstruct_details(coeffs_exchange_rate, wavelet, level)\n",
        "\n",
        "min_length = min(len(stock1_details[0]), len(stock2_details[0]), len(stock3_details[0]), len(exchange_rate_details[0]))\n",
        "stock1_details = [detail[:min_length] for detail in stock1_details]\n",
        "stock2_details = [detail[:min_length] for detail in stock2_details]\n",
        "stock3_details = [detail[:min_length] for detail in stock3_details]\n",
        "exchange_rate_details = [detail[:min_length] for detail in exchange_rate_details]\n",
        "\n",
        "# Combine decomposed series into a DataFrame\n",
        "decomposed_data = pd.DataFrame({\n",
        "    'Stock1_D1': stock1_details[0],\n",
        "    'Stock1_D2': stock1_details[1],\n",
        "    'Stock1_D3': stock1_details[2],\n",
        "    'Stock2_D1': stock2_details[0],\n",
        "    'Stock2_D2': stock2_details[1],\n",
        "    'Stock2_D3': stock2_details[2],\n",
        "    'Stock3_D1': stock3_details[0],\n",
        "    'Stock3_D2': stock3_details[1],\n",
        "    'Stock3_D3': stock3_details[2],\n",
        "    'ExchangeRate_D1': exchange_rate_details[0],\n",
        "    'ExchangeRate_D2': exchange_rate_details[1],\n",
        "    'ExchangeRate_D3': exchange_rate_details[2]\n",
        "})\n",
        "\n",
        "# Perform stationarity tests (ADF and PP)\n",
        "def perform_stationarity_test(series, name):\n",
        "    result = adfuller(series)\n",
        "    print(f\"ADF Test for {name}:\")\n",
        "    print(f\"ADF Statistic: {result[0]:.4f}\")\n",
        "    print(f\"p-value: {result[1]:.4f}\")\n",
        "    print(f\"Number of Lags: {result[2]}\")\n",
        "    print(f\"Number of Observations Used: {result[3]}\")\n",
        "    print(f\"Critical Values:\")\n",
        "    for key, value in result[4].items():\n",
        "        print(f\"\\t{key}: {value:.4f}\")\n",
        "\n",
        "perform_stationarity_test(decomposed_data['Stock1_D1'], 'Stock1_D1')\n",
        "perform_stationarity_test(decomposed_data['Stock2_D1'], 'Stock2_D1')\n",
        "# Perform tests for other decomposed series as needed\n",
        "\n",
        "# VAR model estimation and Granger causality tests\n",
        "def perform_granger_causality_test(data, var_order, cause_var, effect_var, kind='f'):\n",
        "    model = VAR(data[[cause_var, effect_var]])\n",
        "    results = model.fit(maxlags=var_order)\n",
        "    causality_result = results.test_causality(cause_var, effect_var, kind=kind)\n",
        "    print(f\"Granger Causality Test ({cause_var} -> {effect_var}):\")\n",
        "    print(causality_result.summary())\n",
        "\n",
        "var_order = 4  # Example order for VAR model\n",
        "perform_granger_causality_test(\n",
        "    decomposed_data, var_order, 'Stock1_D1', 'Stock2_D1'\n",
        ")\n",
        "\n",
        "# Visualization\n",
        "decomposed_data.plot(subplots=True, figsize=(10, 8))\n",
        "plt.show()\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Another Example**"
      ],
      "metadata": {
        "id": "5khLroXc0Qak"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install numpy pandas statsmodels PyWavelets yfinance fredapi\n",
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import pywt\n",
        "import matplotlib.pyplot as plt\n",
        "from statsmodels.tsa.api import VAR\n",
        "from statsmodels.tsa.stattools import adfuller, grangercausalitytests\n",
        "import yfinance as yf\n",
        "from fredapi import Fred\n",
        "\n",
        "fred_api_key = '6a2911f2802549695d01c94eeb73aa14'\n",
        "\n",
        "fred = Fred(api_key=fred_api_key)\n",
        "\n",
        "start = '2010-01-01'\n",
        "end = '2020-01-01'\n",
        "\n",
        "gdp_growth = fred.get_series('GDP', start, end)\n",
        "unemployment = fred.get_series('UNRATE', start, end)\n",
        "\n",
        "exchange_rate = yf.download('INR=X', start=start, end=end)['Adj Close']\n",
        "\n",
        "data = pd.concat([gdp_growth, unemployment, exchange_rate], axis=1)\n",
        "data.columns = ['GDP_Growth', 'Unemployment', 'ExchangeRate']\n",
        "data = data.dropna()\n",
        "\n",
        "# Transform into natural logarithms and first-difference\n",
        "data['LogGDP_Growth'] = np.log(data['GDP_Growth']).diff().dropna()\n",
        "data['LogUnemployment'] = np.log(data['Unemployment']).diff().dropna()\n",
        "data['LogExchangeRate'] = np.log(data['ExchangeRate']).diff().dropna()\n",
        "\n",
        "# Multiresolution Wavelet Decomposition\n",
        "wavelet = 'sym4'\n",
        "level = 3\n",
        "coeffs_gdp_growth = pywt.wavedec(data['LogGDP_Growth'].dropna(), wavelet, level=level)\n",
        "coeffs_unemployment = pywt.wavedec(data['LogUnemployment'].dropna(), wavelet, level=level)\n",
        "coeffs_exchange_rate = pywt.wavedec(data['LogExchangeRate'].dropna(), wavelet, level=level)\n",
        "\n",
        "# Reconstruct detail coefficients (D1, D2, D3)\n",
        "def reconstruct_details(coeffs, wavelet, level):\n",
        "    details = []\n",
        "    for i in range(1, level + 1):\n",
        "        detail = pywt.upcoef('d', coeffs[i], wavelet, level=i, take=len(coeffs[0]))\n",
        "        details.append(detail)\n",
        "    return details\n",
        "\n",
        "gdp_growth_details = reconstruct_details(coeffs_gdp_growth, wavelet, level)\n",
        "unemployment_details = reconstruct_details(coeffs_unemployment, wavelet, level)\n",
        "exchange_rate_details = reconstruct_details(coeffs_exchange_rate, wavelet, level)\n",
        "\n",
        "min_length = min(len(gdp_growth_details[0]), len(unemployment_details[0]), len(exchange_rate_details[0]))\n",
        "gdp_growth_details = [detail[:min_length] for detail in gdp_growth_details]\n",
        "unemployment_details = [detail[:min_length] for detail in unemployment_details]\n",
        "exchange_rate_details = [detail[:min_length] for detail in exchange_rate_details]\n",
        "\n",
        "# Combine decomposed series into a DataFrame\n",
        "decomposed_data = pd.DataFrame({\n",
        "    'GDP_Growth_D1': gdp_growth_details[0],\n",
        "    'GDP_Growth_D2': gdp_growth_details[1],\n",
        "    'GDP_Growth_D3': gdp_growth_details[2],\n",
        "    'Unemployment_D1': unemployment_details[0],\n",
        "    'Unemployment_D2': unemployment_details[1],\n",
        "    'Unemployment_D3': unemployment_details[2],\n",
        "    'ExchangeRate_D1': exchange_rate_details[0],\n",
        "    'ExchangeRate_D2': exchange_rate_details[1],\n",
        "    'ExchangeRate_D3': exchange_rate_details[2]\n",
        "})\n",
        "\n",
        "# Perform stationarity tests (ADF and PP)\n",
        "def perform_stationarity_test(series, name):\n",
        "    result = adfuller(series)\n",
        "    print(f\"ADF Test for {name}:\")\n",
        "    print(f\"ADF Statistic: {result[0]:.4f}\")\n",
        "    print(f\"p-value: {result[1]:.4f}\")\n",
        "    print(f\"Number of Lags: {result[2]}\")\n",
        "    print(f\"Number of Observations Used: {result[3]}\")\n",
        "    print(f\"Critical Values:\")\n",
        "    for key, value in result[4].items():\n",
        "        print(f\"\\t{key}: {value:.4f}\")\n",
        "\n",
        "perform_stationarity_test(decomposed_data['GDP_Growth_D1'], 'GDP_Growth_D1')\n",
        "perform_stationarity_test(decomposed_data['Unemployment_D1'], 'Unemployment_D1')\n",
        "\n",
        "# VAR model estimation and Granger causality tests\n",
        "def perform_granger_causality_test(data, var_order, cause_var, effect_var, kind='f'):\n",
        "    model = VAR(data[[cause_var, effect_var]])\n",
        "    results = model.fit(maxlags=var_order)\n",
        "    causality_result = results.test_causality(cause_var, effect_var, kind=kind)\n",
        "    print(f\"Granger Causality Test ({cause_var} -> {effect_var}):\")\n",
        "    print(causality_result.summary())\n",
        "\n",
        "# Adjust var_order based on your data and analysis\n",
        "var_order = 4  # Example order for VAR model\n",
        "perform_granger_causality_test(\n",
        "    decomposed_data, var_order, 'GDP_Growth_D1', 'Unemployment_D1'\n",
        ")\n",
        "\n",
        "# Visualization\n",
        "decomposed_data.plot(subplots=True, figsize=(10, 8))\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "iunWbV92oTi2",
        "outputId": "a1ff33eb-43fd-450a-f89b-a893da5803a9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (1.25.2)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.0.3)\n",
            "Requirement already satisfied: statsmodels in /usr/local/lib/python3.10/dist-packages (0.14.2)\n",
            "Requirement already satisfied: PyWavelets in /usr/local/lib/python3.10/dist-packages (1.6.0)\n",
            "Requirement already satisfied: yfinance in /usr/local/lib/python3.10/dist-packages (0.2.40)\n",
            "Requirement already satisfied: fredapi in /usr/local/lib/python3.10/dist-packages (0.5.2)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2023.4)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n",
            "Requirement already satisfied: scipy!=1.9.2,>=1.8 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.11.4)\n",
            "Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (0.5.6)\n",
            "Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (24.0)\n",
            "Requirement already satisfied: requests>=2.31 in /usr/local/lib/python3.10/dist-packages (from yfinance) (2.31.0)\n",
            "Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.10/dist-packages (from yfinance) (0.0.11)\n",
            "Requirement already satisfied: lxml>=4.9.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.9.4)\n",
            "Requirement already satisfied: platformdirs>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.2.2)\n",
            "Requirement already satisfied: frozendict>=2.3.4 in /usr/local/lib/python3.10/dist-packages (from yfinance) (2.4.4)\n",
            "Requirement already satisfied: peewee>=3.16.2 in /usr/local/lib/python3.10/dist-packages (from yfinance) (3.17.5)\n",
            "Requirement already satisfied: beautifulsoup4>=4.11.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.12.3)\n",
            "Requirement already satisfied: html5lib>=1.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (1.1)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4>=4.11.1->yfinance) (2.5)\n",
            "Requirement already satisfied: six>=1.9 in /usr/local/lib/python3.10/dist-packages (from html5lib>=1.1->yfinance) (1.16.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from html5lib>=1.1->yfinance) (0.5.1)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (3.7)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (2024.2.2)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r[*********************100%%**********************]  1 of 1 completed\n",
            "/usr/local/lib/python3.10/dist-packages/pywt/_multilevel.py:43: UserWarning: Level value of 3 is too high: all coefficients will experience boundary effects.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ADF Test for GDP_Growth_D1:\n",
            "ADF Statistic: -4.8686\n",
            "p-value: 0.0000\n",
            "Number of Lags: 2\n",
            "Number of Observations Used: 6\n",
            "Critical Values:\n",
            "\t1%: -5.3543\n",
            "\t5%: -3.6462\n",
            "\t10%: -2.9012\n",
            "ADF Test for Unemployment_D1:\n",
            "ADF Statistic: -6.2464\n",
            "p-value: 0.0000\n",
            "Number of Lags: 1\n",
            "Number of Observations Used: 7\n",
            "Critical Values:\n",
            "\t1%: -4.9387\n",
            "\t5%: -3.4776\n",
            "\t10%: -2.8439\n",
            "Granger Causality Test (GDP_Growth_D1 -> Unemployment_D1):\n",
            "Granger causality F-test. H_0: Unemployment_D1 does not Granger-cause GDP_Growth_D1. Conclusion: reject H_0 at 5% significance level.\n",
            "=============================================\n",
            "Test statistic Critical value p-value    df  \n",
            "---------------------------------------------\n",
            "    -1.790e+11            nan     NAN (4, -8)\n",
            "---------------------------------------------\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 9 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install numpy pandas statsmodels PyWavelets yfinance fredapi scikit-learn\n",
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import pywt\n",
        "import matplotlib.pyplot as plt\n",
        "from statsmodels.tsa.api import VAR\n",
        "from statsmodels.tsa.stattools import adfuller, grangercausalitytests\n",
        "import yfinance as yf\n",
        "from fredapi import Fred\n",
        "from sklearn.neighbors import KernelDensity\n",
        "from scipy.stats import norm\n",
        "\n",
        "fred_api_key = '6a2911f2802549695d01c94eeb73aa14'\n",
        "\n",
        "fred = Fred(api_key=fred_api_key)\n",
        "\n",
        "start = '2010-01-01'\n",
        "end = '2020-01-01'\n",
        "\n",
        "gdp_growth = fred.get_series('A191RL1Q225SBEA', start, end)  # Real GDP per capita growth rate\n",
        "cpi = fred.get_series('CPIAUCSL', start, end)  # Consumer Price Index for All Urban Consumers: All Items in U.S. City Average\n",
        "exchange_rate = yf.download('INR=X', start=start, end=end)['Adj Close']\n",
        "\n",
        "data = pd.concat([gdp_growth, cpi, exchange_rate], axis=1)\n",
        "data.columns = ['GDP_Growth', 'CPI', 'ExchangeRate']\n",
        "data = data.dropna()\n",
        "\n",
        "# Transform into natural logarithms and first-difference\n",
        "data['LogGDP_Growth'] = np.log(data['GDP_Growth']).diff().dropna()\n",
        "data['LogCPI'] = np.log(data['CPI']).diff().dropna()\n",
        "data['LogExchangeRate'] = np.log(data['ExchangeRate']).diff().dropna()\n",
        "\n",
        "# Multiresolution Wavelet Decomposition\n",
        "wavelet = 'sym4'\n",
        "level = 3\n",
        "coeffs_gdp_growth = pywt.wavedec(data['LogGDP_Growth'].dropna(), wavelet, level=level)\n",
        "coeffs_cpi = pywt.wavedec(data['LogCPI'].dropna(), wavelet, level=level)\n",
        "coeffs_exchange_rate = pywt.wavedec(data['LogExchangeRate'].dropna(), wavelet, level=level)\n",
        "\n",
        "# Reconstruct detail coefficients (D1, D2, D3)\n",
        "def reconstruct_details(coeffs, wavelet, level):\n",
        "    details = []\n",
        "    for i in range(1, level + 1):\n",
        "        detail = pywt.upcoef('d', coeffs[i], wavelet, level=i, take=len(coeffs[0]))\n",
        "        details.append(detail)\n",
        "    return details\n",
        "\n",
        "gdp_growth_details = reconstruct_details(coeffs_gdp_growth, wavelet, level)\n",
        "cpi_details = reconstruct_details(coeffs_cpi, wavelet, level)\n",
        "exchange_rate_details = reconstruct_details(coeffs_exchange_rate, wavelet, level)\n",
        "\n",
        "# Ensure all series are of the same length\n",
        "min_length = min(len(gdp_growth_details[0]), len(cpi_details[0]), len(exchange_rate_details[0]))\n",
        "gdp_growth_details = [detail[:min_length] for detail in gdp_growth_details]\n",
        "cpi_details = [detail[:min_length] for detail in cpi_details]\n",
        "exchange_rate_details = [detail[:min_length] for detail in exchange_rate_details]\n",
        "\n",
        "# Combine decomposed series into a DataFrame\n",
        "decomposed_data = pd.DataFrame({\n",
        "    'GDP_Growth_D1': gdp_growth_details[0],\n",
        "    'GDP_Growth_D2': gdp_growth_details[1],\n",
        "    'GDP_Growth_D3': gdp_growth_details[2],\n",
        "    'CPI_D1': cpi_details[0],\n",
        "    'CPI_D2': cpi_details[1],\n",
        "    'CPI_D3': cpi_details[2],\n",
        "    'ExchangeRate_D1': exchange_rate_details[0],\n",
        "    'ExchangeRate_D2': exchange_rate_details[1],\n",
        "    'ExchangeRate_D3': exchange_rate_details[2]\n",
        "})\n",
        "\n",
        "# Perform stationarity tests (ADF and PP)\n",
        "def perform_stationarity_test(series, name):\n",
        "    result = adfuller(series)\n",
        "    print(f\"ADF Test for {name}:\")\n",
        "    print(f\"ADF Statistic: {result[0]:.4f}\")\n",
        "    print(f\"p-value: {result[1]:.4f}\")\n",
        "    print(f\"Number of Lags: {result[2]}\")\n",
        "    print(f\"Number of Observations Used: {result[3]}\")\n",
        "    print(f\"Critical Values:\")\n",
        "    for key, value in result[4].items():\n",
        "        print(f\"\\t{key}: {value:.4f}\")\n",
        "\n",
        "perform_stationarity_test(decomposed_data['GDP_Growth_D1'], 'GDP_Growth_D1')\n",
        "perform_stationarity_test(decomposed_data['CPI_D1'], 'CPI_D1')\n",
        "# Perform tests for other decomposed series as needed\n",
        "\n",
        "# VAR model estimation and Granger causality tests\n",
        "def perform_granger_causality_test(data, var_order, cause_var, effect_var, kind='f'):\n",
        "    model = VAR(data[[cause_var, effect_var]])\n",
        "    results = model.fit(maxlags=var_order)\n",
        "    causality_result = results.test_causality(cause_var, effect_var, kind=kind)\n",
        "    print(f\"Granger Causality Test ({cause_var} -> {effect_var}):\")\n",
        "    print(causality_result.summary())\n",
        "\n",
        "# Adjust var_order based on your data and analysis\n",
        "var_order = 4\n",
        "perform_granger_causality_test(\n",
        "    decomposed_data, var_order, 'GDP_Growth_D1', 'CPI_D1'\n",
        ")\n",
        "# Perform tests for other frequency bands and variable pairs as needed\n",
        "\n",
        "# Visualization\n",
        "decomposed_data.plot(subplots=True, figsize=(10, 8))\n",
        "plt.show()\n",
        "\n",
        "def dp_test(X, Y, epsilon=1.5, bandwidth=1):\n",
        "    def local_density(X, bandwidth):\n",
        "        kde = KernelDensity(kernel='gaussian', bandwidth=bandwidth).fit(X)\n",
        "        log_density = kde.score_samples(X)\n",
        "        return np.exp(log_density)\n",
        "\n",
        "    # Ensure consistent length for X and Y\n",
        "    min_length = min(len(X), len(Y))\n",
        "    X = np.array(X[:min_length]).reshape(-1, 1)\n",
        "    Y = np.array(Y[:min_length]).reshape(-1, 1)\n",
        "\n",
        "    # Joint density estimation\n",
        "    XY = np.hstack((X, Y))\n",
        "    f_XY = local_density(XY, bandwidth)\n",
        "\n",
        "    # Marginal density estimations\n",
        "    f_X = local_density(X, bandwidth)\n",
        "    f_Y = local_density(Y, bandwidth)\n",
        "\n",
        "    dp_stat = np.mean(f_XY * f_Y - f_X * f_Y)\n",
        "    dp_stat /= np.std(f_XY * f_Y - f_X * f_Y) / np.sqrt(len(X))\n",
        "\n",
        "    return dp_stat, norm.cdf(dp_stat)\n",
        "\n",
        "dp_stat, p_value = dp_test(decomposed_data['GDP_Growth_D1'], decomposed_data['CPI_D1'])\n",
        "print(f\"DP Test Statistic: {dp_stat}\")\n",
        "print(f\"P-Value: {p_value}\")\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "903ypHQ9rDOm",
        "outputId": "aecc7ac2-39fa-4d2f-bd65-81a576e0d2bb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (1.25.2)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.0.3)\n",
            "Requirement already satisfied: statsmodels in /usr/local/lib/python3.10/dist-packages (0.14.2)\n",
            "Requirement already satisfied: PyWavelets in /usr/local/lib/python3.10/dist-packages (1.6.0)\n",
            "Requirement already satisfied: yfinance in /usr/local/lib/python3.10/dist-packages (0.2.40)\n",
            "Requirement already satisfied: fredapi in /usr/local/lib/python3.10/dist-packages (0.5.2)\n",
            "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (1.2.2)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2023.4)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n",
            "Requirement already satisfied: scipy!=1.9.2,>=1.8 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (1.11.4)\n",
            "Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (0.5.6)\n",
            "Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.10/dist-packages (from statsmodels) (24.0)\n",
            "Requirement already satisfied: requests>=2.31 in /usr/local/lib/python3.10/dist-packages (from yfinance) (2.31.0)\n",
            "Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.10/dist-packages (from yfinance) (0.0.11)\n",
            "Requirement already satisfied: lxml>=4.9.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.9.4)\n",
            "Requirement already satisfied: platformdirs>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.2.2)\n",
            "Requirement already satisfied: frozendict>=2.3.4 in /usr/local/lib/python3.10/dist-packages (from yfinance) (2.4.4)\n",
            "Requirement already satisfied: peewee>=3.16.2 in /usr/local/lib/python3.10/dist-packages (from yfinance) (3.17.5)\n",
            "Requirement already satisfied: beautifulsoup4>=4.11.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.12.3)\n",
            "Requirement already satisfied: html5lib>=1.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (1.1)\n",
            "Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.4.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (3.5.0)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4>=4.11.1->yfinance) (2.5)\n",
            "Requirement already satisfied: six>=1.9 in /usr/local/lib/python3.10/dist-packages (from html5lib>=1.1->yfinance) (1.16.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from html5lib>=1.1->yfinance) (0.5.1)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (3.7)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (2024.2.2)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r[*********************100%%**********************]  1 of 1 completed\n",
            "/usr/local/lib/python3.10/dist-packages/pandas/core/arraylike.py:396: RuntimeWarning: invalid value encountered in log\n",
            "  result = getattr(ufunc, method)(*inputs, **kwargs)\n",
            "/usr/local/lib/python3.10/dist-packages/pywt/_multilevel.py:43: UserWarning: Level value of 3 is too high: all coefficients will experience boundary effects.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ADF Test for GDP_Growth_D1:\n",
            "ADF Statistic: -6.6717\n",
            "p-value: 0.0000\n",
            "Number of Lags: 1\n",
            "Number of Observations Used: 7\n",
            "Critical Values:\n",
            "\t1%: -4.9387\n",
            "\t5%: -3.4776\n",
            "\t10%: -2.8439\n",
            "ADF Test for CPI_D1:\n",
            "ADF Statistic: -2.3913\n",
            "p-value: 0.1442\n",
            "Number of Lags: 2\n",
            "Number of Observations Used: 6\n",
            "Critical Values:\n",
            "\t1%: -5.3543\n",
            "\t5%: -3.6462\n",
            "\t10%: -2.9012\n",
            "Granger Causality Test (GDP_Growth_D1 -> CPI_D1):\n",
            "Granger causality F-test. H_0: CPI_D1 does not Granger-cause GDP_Growth_D1. Conclusion: reject H_0 at 5% significance level.\n",
            "=============================================\n",
            "Test statistic Critical value p-value    df  \n",
            "---------------------------------------------\n",
            "     8.272e+11            nan     NAN (4, -8)\n",
            "---------------------------------------------\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 9 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "DP Test Statistic: -125.24635681653467\n",
            "P-Value: 0.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "7lqmycectT2U"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Permutation - Granger Causality"
      ],
      "metadata": {
        "id": "65cFQUzS1e6N"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import yfinance as yf\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "def download_data(tickers, start_date, end_date):\n",
        "    data = yf.download(tickers, start=start_date, end=end_date)\n",
        "    return data['Adj Close']\n",
        "\n",
        "tickers = ['^GSPC', '^IXIC']\n",
        "data = download_data(tickers, '2010-01-01', '2023-01-01')\n",
        "\n",
        "data = data.dropna()\n",
        "\n",
        "train_data, test_data = train_test_split(data, test_size=0.2, shuffle=False)\n",
        "\n",
        "train_mean = train_data.mean()\n",
        "train_std = train_data.std()\n",
        "train_data = (train_data - train_mean) / train_std\n",
        "test_data = (test_data - train_mean) / train_std\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p2hTWRvYtfyG",
        "outputId": "a9629bbe-9dca-43bc-8d19-c1764a8ba383"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[*********************100%%**********************]  2 of 2 completed\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import torch\n",
        "import torch.nn as nn\n",
        "import torch.optim as optim\n",
        "from torch.utils.data import DataLoader, TensorDataset\n",
        "\n",
        "class FeedForwardNN(nn.Module):\n",
        "    def __init__(self, input_size, hidden_size, output_size):\n",
        "        super(FeedForwardNN, self).__init__()\n",
        "        self.fc1 = nn.Linear(input_size, hidden_size)\n",
        "        self.relu = nn.ReLU()\n",
        "        self.fc2 = nn.Linear(hidden_size, output_size)\n",
        "\n",
        "    def forward(self, x):\n",
        "        out = self.fc1(x)\n",
        "        out = self.relu(out)\n",
        "        out = self.fc2(out)\n",
        "        return out\n",
        "\n",
        "def prepare_data(data, lag):\n",
        "    X, y = [], []\n",
        "    for i in range(len(data) - lag):\n",
        "        X.append(data.iloc[i:i+lag].values.flatten())\n",
        "        y.append(data.iloc[i+lag].values)\n",
        "    return np.array(X), np.array(y)\n",
        "\n",
        "lag = 5\n",
        "X_train, y_train = prepare_data(train_data, lag)\n",
        "X_test, y_test = prepare_data(test_data, lag)\n",
        "\n",
        "train_dataset = TensorDataset(torch.tensor(X_train, dtype=torch.float32), torch.tensor(y_train, dtype=torch.float32))\n",
        "test_dataset = TensorDataset(torch.tensor(X_test, dtype=torch.float32), torch.tensor(y_test, dtype=torch.float32))\n",
        "\n",
        "train_loader = DataLoader(train_dataset, batch_size=32, shuffle=True)\n",
        "test_loader = DataLoader(test_dataset, batch_size=32, shuffle=False)\n",
        "\n",
        "# Define model, loss function, and optimizer\n",
        "input_size = X_train.shape[1]\n",
        "hidden_size = 50\n",
        "output_size = y_train.shape[1]\n",
        "model = FeedForwardNN(input_size, hidden_size, output_size)\n",
        "criterion = nn.MSELoss()\n",
        "optimizer = optim.Adam(model.parameters(), lr=0.001)\n",
        "\n",
        "# Training the model\n",
        "def train_model(model, train_loader, criterion, optimizer, epochs):\n",
        "    model.train()\n",
        "    for epoch in range(epochs):\n",
        "        for X_batch, y_batch in train_loader:\n",
        "            optimizer.zero_grad()\n",
        "            outputs = model(X_batch)\n",
        "            loss = criterion(outputs, y_batch)\n",
        "            loss.backward()\n",
        "            optimizer.step()\n",
        "        print(f'Epoch {epoch+1}/{epochs}, Loss: {loss.item()}')\n",
        "\n",
        "train_model(model, train_loader, criterion, optimizer, epochs=50)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JgNnc-b0tg0m",
        "outputId": "b795b54f-1105-4332-a145-acdff4896007"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50, Loss: 0.009156977757811546\n",
            "Epoch 2/50, Loss: 0.004574381280690432\n",
            "Epoch 3/50, Loss: 0.005833919160068035\n",
            "Epoch 4/50, Loss: 0.0029301343020051718\n",
            "Epoch 5/50, Loss: 0.005446850322186947\n",
            "Epoch 6/50, Loss: 0.0010705707827582955\n",
            "Epoch 7/50, Loss: 0.0034009970258921385\n",
            "Epoch 8/50, Loss: 0.0020047456491738558\n",
            "Epoch 9/50, Loss: 0.004575729835778475\n",
            "Epoch 10/50, Loss: 0.002714018803089857\n",
            "Epoch 11/50, Loss: 0.0020155818201601505\n",
            "Epoch 12/50, Loss: 0.0012237688060849905\n",
            "Epoch 13/50, Loss: 0.0016555620823055506\n",
            "Epoch 14/50, Loss: 0.001005939906463027\n",
            "Epoch 15/50, Loss: 0.00275377556681633\n",
            "Epoch 16/50, Loss: 0.0011091127526015043\n",
            "Epoch 17/50, Loss: 0.0015032811788842082\n",
            "Epoch 18/50, Loss: 0.0007730782963335514\n",
            "Epoch 19/50, Loss: 0.0014889325248077512\n",
            "Epoch 20/50, Loss: 0.0013184131821617484\n",
            "Epoch 21/50, Loss: 0.0011496845399960876\n",
            "Epoch 22/50, Loss: 0.0018069492653012276\n",
            "Epoch 23/50, Loss: 0.0006231010193005204\n",
            "Epoch 24/50, Loss: 0.0007479187333956361\n",
            "Epoch 25/50, Loss: 0.003715249476954341\n",
            "Epoch 26/50, Loss: 0.0013086426770314574\n",
            "Epoch 27/50, Loss: 0.002654481213539839\n",
            "Epoch 28/50, Loss: 0.0010345869231969118\n",
            "Epoch 29/50, Loss: 0.0016616213833913207\n",
            "Epoch 30/50, Loss: 0.001448754221200943\n",
            "Epoch 31/50, Loss: 0.0014659824082627892\n",
            "Epoch 32/50, Loss: 0.0011045228457078338\n",
            "Epoch 33/50, Loss: 0.0012144292704761028\n",
            "Epoch 34/50, Loss: 0.00081298389704898\n",
            "Epoch 35/50, Loss: 0.011781668290495872\n",
            "Epoch 36/50, Loss: 0.0008459122036583722\n",
            "Epoch 37/50, Loss: 0.014981557615101337\n",
            "Epoch 38/50, Loss: 0.0008675623685121536\n",
            "Epoch 39/50, Loss: 0.0016243478748947382\n",
            "Epoch 40/50, Loss: 0.0020900818053632975\n",
            "Epoch 41/50, Loss: 0.011759481392800808\n",
            "Epoch 42/50, Loss: 0.0014517856761813164\n",
            "Epoch 43/50, Loss: 0.0008349361596629024\n",
            "Epoch 44/50, Loss: 0.0013392770197242498\n",
            "Epoch 45/50, Loss: 0.00039545417530462146\n",
            "Epoch 46/50, Loss: 0.0004185550787951797\n",
            "Epoch 47/50, Loss: 0.003960601519793272\n",
            "Epoch 48/50, Loss: 0.0020133063662797213\n",
            "Epoch 49/50, Loss: 0.0009926155908033252\n",
            "Epoch 50/50, Loss: 0.0027399007230997086\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def permute_data(data):\n",
        "    permuted_data = data.copy()\n",
        "    np.random.shuffle(permuted_data)\n",
        "    return permuted_data\n",
        "\n",
        "# Create multiple permutations\n",
        "num_permutations = 100\n",
        "permuted_data_sets = [permute_data(X_train) for _ in range(num_permutations)]\n",
        "\n",
        "# Evaluate variance of prediction errors for original and permuted data sets\n",
        "def evaluate_model(model, data_loader, criterion):\n",
        "    model.eval()\n",
        "    losses = []\n",
        "    with torch.no_grad():\n",
        "        for X_batch, y_batch in data_loader:\n",
        "            outputs = model(X_batch)\n",
        "            loss = criterion(outputs, y_batch)\n",
        "            losses.append(loss.item())\n",
        "    return np.mean(losses)\n",
        "\n",
        "original_error = evaluate_model(model, test_loader, criterion)\n",
        "permuted_errors = [evaluate_model(model, DataLoader(TensorDataset(torch.tensor(data, dtype=torch.float32), torch.tensor(y_train, dtype=torch.float32)), batch_size=32, shuffle=False), criterion) for data in permuted_data_sets]\n",
        "\n",
        "# Calculate p-value\n",
        "p_value = np.mean([error < original_error for error in permuted_errors])\n",
        "print(f'p-value: {p_value}')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qEAwMtK0tkJB",
        "outputId": "de6acab7-5665-4c11-ddb3-c5e0d664fcf5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "p-value: 0.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "2TSHanZIuLoM"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
